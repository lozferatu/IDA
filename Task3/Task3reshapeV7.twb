<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Wealth Location Scale' datatype='string' name='[Location Scale (copy)_1469862350291353605]' param-domain-type='list' role='measure' type='nominal' value='&quot;Country&quot;'>
        <calculation class='tableau' formula='&quot;Country&quot;' />
        <members>
          <member value='&quot;Continent&quot;' />
          <member value='&quot;Sub-Region&quot;' />
          <member value='&quot;Country&quot;' />
        </members>
      </column>
      <column alias='Severe Wasting' caption='Malnutrition vs Wealth' datatype='string' name='[Malnutrition Change (copy)_1469862350254456833]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting &quot;'>
        <calculation class='tableau' formula='&quot;Severe Wasting &quot;' />
        <aliases>
          <alias key='&quot;Overweight&quot;' value='Overweight' />
          <alias key='&quot;Severe Wasting &quot;' value='Severe Wasting' />
          <alias key='&quot;Stunting&quot;' value='Stunting' />
          <alias key='&quot;Underweight&quot;' value='Underweight' />
          <alias key='&quot;Wasting&quot;' value='Wasting' />
        </aliases>
        <members>
          <member alias='Stunting' value='&quot;Stunting&quot;' />
          <member alias='Underweight' value='&quot;Underweight&quot;' />
          <member alias='Overweight' value='&quot;Overweight&quot;' />
          <member alias='Wasting' value='&quot;Wasting&quot;' />
          <member alias='Severe Wasting' value='&quot;Severe Wasting &quot;' />
        </members>
      </column>
      <column alias='Severe Wasting Change' caption='Malnutrition Change' datatype='string' name='[Malnutrition Type (copy)_1271422491595653120]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting Change&quot;'>
        <calculation class='tableau' formula='&quot;Severe Wasting Change&quot;' />
        <aliases>
          <alias key='&quot;Overweight Change&quot;' value='Overweight Change' />
          <alias key='&quot;Severe Wasting Change&quot;' value='Severe Wasting Change' />
          <alias key='&quot;Stunting Change&quot;' value='Stunting Change' />
          <alias key='&quot;Underweight Change&quot;' value='Underweight Change' />
          <alias key='&quot;Wasting Change&quot;' value='Wasting Change' />
        </aliases>
        <members>
          <member alias='Stunting Change' value='&quot;Stunting Change&quot;' />
          <member alias='Underweight Change' value='&quot;Underweight Change&quot;' />
          <member alias='Overweight Change' value='&quot;Overweight Change&quot;' />
          <member alias='Wasting Change' value='&quot;Wasting Change&quot;' />
          <member alias='Severe Wasting Change' value='&quot;Severe Wasting Change&quot;' />
        </members>
      </column>
      <column alias='Severe Wasting' caption='Malnutrition Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting&quot;'>
        <calculation class='tableau' formula='&quot;Severe Wasting&quot;' />
        <aliases>
          <alias key='&quot;Overweight&quot;' value='Overweight' />
          <alias key='&quot;Severe Wasting&quot;' value='Severe Wasting' />
          <alias key='&quot;Stunting&quot;' value='Stunting' />
          <alias key='&quot;Underweight&quot;' value='Underweight' />
          <alias key='&quot;Wasting&quot;' value='Wasting' />
        </aliases>
        <members>
          <member alias='Stunting' value='&quot;Stunting&quot;' />
          <member alias='Underweight' value='&quot;Underweight&quot;' />
          <member alias='Wasting' value='&quot;Wasting&quot;' />
          <member alias='Severe Wasting' value='&quot;Severe Wasting&quot;' />
          <member alias='Overweight' value='&quot;Overweight&quot;' />
        </members>
      </column>
      <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
        <calculation class='tableau' formula='&quot;Continent&quot;' />
        <members>
          <member value='&quot;Continent&quot;' />
          <member value='&quot;Sub-Region&quot;' />
          <member value='&quot;Country&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Country&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sub-Region&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' inline='true' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ages_merge_mal' name='textscan.1x588eq0ipe33x15rxi950asil1o'>
            <connection class='textscan' directory='D:/GitHub/IDA/Task3/Full CI Data' filename='ages_merge_mal.csv' password='' server='' />
          </named-connection>
          <named-connection caption='wealth_quint_df_final' name='textscan.1rzz8gn19dftq218u83ko0udnhtc'>
            <connection class='textscan' directory='D:/GitHub/IDA/Task3/Full CI Data' filename='wealth_quint_df_final.csv' password='' server='' />
          </named-connection>
          <named-connection caption='wealth_reshape_quint' name='textscan.0i3c2h71etgv3g12ly7jt0gahjev'>
            <connection class='textscan' directory='D:/GitHub/IDA/Task3/Final Data' filename='wealth_reshape_quint.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x588eq0ipe33x15rxi950asil1o' name='ages_merge_mal.csv' table='[ages_merge_mal#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='string' name='Data Source' ordinal='2' />
            <column datatype='string' name='Age Range' ordinal='3' />
            <column datatype='real' name='Stunting prevalence  (%)_Mean' ordinal='4' />
            <column datatype='real' name='Stunting prevalence  (%)_CI_Low' ordinal='5' />
            <column datatype='real' name='Stunting prevalence  (%)_CI_High' ordinal='6' />
            <column datatype='real' name='Underweight prevalence  (%)_Mean' ordinal='7' />
            <column datatype='real' name='Underweight prevalence  (%)_CI_Low' ordinal='8' />
            <column datatype='real' name='Underweight prevalence  (%)_CI_High' ordinal='9' />
            <column datatype='real' name='Wasting prevalence  (%)_Mean' ordinal='10' />
            <column datatype='real' name='Wasting prevalence  (%)_CI_Low' ordinal='11' />
            <column datatype='real' name='Wasting prevalence  (%)_CI_High' ordinal='12' />
            <column datatype='real' name='Severe wasting prevalence  (%)_Mean' ordinal='13' />
            <column datatype='real' name='Severe wasting prevalence  (%)_CI_Low' ordinal='14' />
            <column datatype='real' name='Severe wasting prevalence  (%)_CI_High' ordinal='15' />
            <column datatype='real' name='Overweight prevalence  (%)_Mean' ordinal='16' />
            <column datatype='real' name='Overweight prevalence  (%)_CI_Low' ordinal='17' />
            <column datatype='real' name='Overweight prevalence  (%)_CI_High' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1x588eq0ipe33x15rxi950asil1o' name='ages_merge_mal.csv' table='[ages_merge_mal#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='string' name='Data Source' ordinal='2' />
              <column datatype='string' name='Age Range' ordinal='3' />
              <column datatype='real' name='Stunting prevalence  (%)_Mean' ordinal='4' />
              <column datatype='real' name='Stunting prevalence  (%)_CI_Low' ordinal='5' />
              <column datatype='real' name='Stunting prevalence  (%)_CI_High' ordinal='6' />
              <column datatype='real' name='Underweight prevalence  (%)_Mean' ordinal='7' />
              <column datatype='real' name='Underweight prevalence  (%)_CI_Low' ordinal='8' />
              <column datatype='real' name='Underweight prevalence  (%)_CI_High' ordinal='9' />
              <column datatype='real' name='Wasting prevalence  (%)_Mean' ordinal='10' />
              <column datatype='real' name='Wasting prevalence  (%)_CI_Low' ordinal='11' />
              <column datatype='real' name='Wasting prevalence  (%)_CI_High' ordinal='12' />
              <column datatype='real' name='Severe wasting prevalence  (%)_Mean' ordinal='13' />
              <column datatype='real' name='Severe wasting prevalence  (%)_CI_Low' ordinal='14' />
              <column datatype='real' name='Severe wasting prevalence  (%)_CI_High' ordinal='15' />
              <column datatype='real' name='Overweight prevalence  (%)_Mean' ordinal='16' />
              <column datatype='real' name='Overweight prevalence  (%)_CI_Low' ordinal='17' />
              <column datatype='real' name='Overweight prevalence  (%)_CI_High' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.0i3c2h71etgv3g12ly7jt0gahjev' name='wealth_reshape_quint.csv' table='[wealth_reshape_quint#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
              <column datatype='string' name='Data Source' ordinal='3' />
              <column datatype='string' name='Age Range' ordinal='4' />
              <column datatype='string' name='Wealth Quintile' ordinal='5' />
              <column datatype='real' name='Stunting prevalence  _Mean' ordinal='6' />
              <column datatype='real' name='Stunting prevalence  _CI_Low' ordinal='7' />
              <column datatype='real' name='Stunting prevalence  _CI_High' ordinal='8' />
              <column datatype='real' name='Underweight prevalence  _Mean' ordinal='9' />
              <column datatype='real' name='Underweight prevalence  _CI_Low' ordinal='10' />
              <column datatype='real' name='Underweight prevalence  _CI_High' ordinal='11' />
              <column datatype='real' name='Wasting prevalence  _Mean' ordinal='12' />
              <column datatype='real' name='Wasting prevalence  _CI_Low' ordinal='13' />
              <column datatype='real' name='Wasting prevalence  _CI_High' ordinal='14' />
              <column datatype='real' name='Severe wasting prevalence  _Mean' ordinal='15' />
              <column datatype='real' name='Severe wasting prevalence  _CI_Low' ordinal='16' />
              <column datatype='real' name='Severe wasting prevalence  _CI_High' ordinal='17' />
              <column datatype='real' name='Overweight prevalence  _Mean' ordinal='18' />
              <column datatype='real' name='Overweight prevalence  _CI_Low' ordinal='19' />
              <column datatype='real' name='Overweight prevalence  _CI_High' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age Range (wealth_reshape_quint.csv)]' value='[wealth_reshape_quint.csv].[Age Range]' />
          <map key='[Age Range]' value='[ages_merge_mal.csv].[Age Range]' />
          <map key='[Country (wealth_reshape_quint.csv)]' value='[wealth_reshape_quint.csv].[Country]' />
          <map key='[Country]' value='[ages_merge_mal.csv].[Country]' />
          <map key='[Data Source (wealth_reshape_quint.csv)]' value='[wealth_reshape_quint.csv].[Data Source]' />
          <map key='[Data Source]' value='[ages_merge_mal.csv].[Data Source]' />
          <map key='[F1]' value='[wealth_reshape_quint.csv].[F1]' />
          <map key='[Overweight prevalence  (%)_CI_High]' value='[ages_merge_mal.csv].[Overweight prevalence  (%)_CI_High]' />
          <map key='[Overweight prevalence  (%)_CI_Low]' value='[ages_merge_mal.csv].[Overweight prevalence  (%)_CI_Low]' />
          <map key='[Overweight prevalence  (%)_Mean]' value='[ages_merge_mal.csv].[Overweight prevalence  (%)_Mean]' />
          <map key='[Overweight prevalence  _CI_High]' value='[wealth_reshape_quint.csv].[Overweight prevalence  _CI_High]' />
          <map key='[Overweight prevalence  _CI_Low]' value='[wealth_reshape_quint.csv].[Overweight prevalence  _CI_Low]' />
          <map key='[Overweight prevalence  _Mean]' value='[wealth_reshape_quint.csv].[Overweight prevalence  _Mean]' />
          <map key='[Severe wasting prevalence  (%)_CI_High]' value='[ages_merge_mal.csv].[Severe wasting prevalence  (%)_CI_High]' />
          <map key='[Severe wasting prevalence  (%)_CI_Low]' value='[ages_merge_mal.csv].[Severe wasting prevalence  (%)_CI_Low]' />
          <map key='[Severe wasting prevalence  (%)_Mean]' value='[ages_merge_mal.csv].[Severe wasting prevalence  (%)_Mean]' />
          <map key='[Severe wasting prevalence  _CI_High]' value='[wealth_reshape_quint.csv].[Severe wasting prevalence  _CI_High]' />
          <map key='[Severe wasting prevalence  _CI_Low]' value='[wealth_reshape_quint.csv].[Severe wasting prevalence  _CI_Low]' />
          <map key='[Severe wasting prevalence  _Mean]' value='[wealth_reshape_quint.csv].[Severe wasting prevalence  _Mean]' />
          <map key='[Stunting prevalence  (%)_CI_High]' value='[ages_merge_mal.csv].[Stunting prevalence  (%)_CI_High]' />
          <map key='[Stunting prevalence  (%)_CI_Low]' value='[ages_merge_mal.csv].[Stunting prevalence  (%)_CI_Low]' />
          <map key='[Stunting prevalence  (%)_Mean]' value='[ages_merge_mal.csv].[Stunting prevalence  (%)_Mean]' />
          <map key='[Stunting prevalence  _CI_High]' value='[wealth_reshape_quint.csv].[Stunting prevalence  _CI_High]' />
          <map key='[Stunting prevalence  _CI_Low]' value='[wealth_reshape_quint.csv].[Stunting prevalence  _CI_Low]' />
          <map key='[Stunting prevalence  _Mean]' value='[wealth_reshape_quint.csv].[Stunting prevalence  _Mean]' />
          <map key='[Underweight prevalence  (%)_CI_High]' value='[ages_merge_mal.csv].[Underweight prevalence  (%)_CI_High]' />
          <map key='[Underweight prevalence  (%)_CI_Low]' value='[ages_merge_mal.csv].[Underweight prevalence  (%)_CI_Low]' />
          <map key='[Underweight prevalence  (%)_Mean]' value='[ages_merge_mal.csv].[Underweight prevalence  (%)_Mean]' />
          <map key='[Underweight prevalence  _CI_High]' value='[wealth_reshape_quint.csv].[Underweight prevalence  _CI_High]' />
          <map key='[Underweight prevalence  _CI_Low]' value='[wealth_reshape_quint.csv].[Underweight prevalence  _CI_Low]' />
          <map key='[Underweight prevalence  _Mean]' value='[wealth_reshape_quint.csv].[Underweight prevalence  _Mean]' />
          <map key='[Wasting prevalence  (%)_CI_High]' value='[ages_merge_mal.csv].[Wasting prevalence  (%)_CI_High]' />
          <map key='[Wasting prevalence  (%)_CI_Low]' value='[ages_merge_mal.csv].[Wasting prevalence  (%)_CI_Low]' />
          <map key='[Wasting prevalence  (%)_Mean]' value='[ages_merge_mal.csv].[Wasting prevalence  (%)_Mean]' />
          <map key='[Wasting prevalence  _CI_High]' value='[wealth_reshape_quint.csv].[Wasting prevalence  _CI_High]' />
          <map key='[Wasting prevalence  _CI_Low]' value='[wealth_reshape_quint.csv].[Wasting prevalence  _CI_Low]' />
          <map key='[Wasting prevalence  _Mean]' value='[wealth_reshape_quint.csv].[Wasting prevalence  _Mean]' />
          <map key='[Wealth Quintile]' value='[wealth_reshape_quint.csv].[Wealth Quintile]' />
          <map key='[Year (wealth_reshape_quint.csv)]' value='[wealth_reshape_quint.csv].[Year]' />
          <map key='[Year]' value='[ages_merge_mal.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Data Source]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Data Source</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Range]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Age Range</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stunting prevalence  (%)_Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stunting prevalence  (%)_Mean]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Stunting prevalence  (%)_Mean</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stunting prevalence  (%)_CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stunting prevalence  (%)_CI_Low]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Stunting prevalence  (%)_CI_Low</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stunting prevalence  (%)_CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stunting prevalence  (%)_CI_High]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Stunting prevalence  (%)_CI_High</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Underweight prevalence  (%)_Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Underweight prevalence  (%)_Mean]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Underweight prevalence  (%)_Mean</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Underweight prevalence  (%)_CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Underweight prevalence  (%)_CI_Low]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Underweight prevalence  (%)_CI_Low</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Underweight prevalence  (%)_CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Underweight prevalence  (%)_CI_High]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Underweight prevalence  (%)_CI_High</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wasting prevalence  (%)_Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wasting prevalence  (%)_Mean]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Wasting prevalence  (%)_Mean</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wasting prevalence  (%)_CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wasting prevalence  (%)_CI_Low]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Wasting prevalence  (%)_CI_Low</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wasting prevalence  (%)_CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wasting prevalence  (%)_CI_High]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Wasting prevalence  (%)_CI_High</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe wasting prevalence  (%)_Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe wasting prevalence  (%)_Mean]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Severe wasting prevalence  (%)_Mean</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe wasting prevalence  (%)_CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe wasting prevalence  (%)_CI_Low]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Severe wasting prevalence  (%)_CI_Low</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe wasting prevalence  (%)_CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe wasting prevalence  (%)_CI_High]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Severe wasting prevalence  (%)_CI_High</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overweight prevalence  (%)_Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overweight prevalence  (%)_Mean]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Overweight prevalence  (%)_Mean</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overweight prevalence  (%)_CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overweight prevalence  (%)_CI_Low]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Overweight prevalence  (%)_CI_Low</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overweight prevalence  (%)_CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overweight prevalence  (%)_CI_High]</local-name>
            <parent-name>[ages_merge_mal.csv]</parent-name>
            <remote-alias>Overweight prevalence  (%)_CI_High</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (wealth_reshape_quint.csv)]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (wealth_reshape_quint.csv)]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Data Source (wealth_reshape_quint.csv)]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Data Source</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Range</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Range (wealth_reshape_quint.csv)]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Age Range</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wealth Quintile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wealth Quintile]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Wealth Quintile</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stunting prevalence  _Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stunting prevalence  _Mean]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Stunting prevalence  _Mean</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stunting prevalence  _CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stunting prevalence  _CI_Low]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Stunting prevalence  _CI_Low</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stunting prevalence  _CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stunting prevalence  _CI_High]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Stunting prevalence  _CI_High</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Underweight prevalence  _Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Underweight prevalence  _Mean]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Underweight prevalence  _Mean</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Underweight prevalence  _CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Underweight prevalence  _CI_Low]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Underweight prevalence  _CI_Low</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Underweight prevalence  _CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Underweight prevalence  _CI_High]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Underweight prevalence  _CI_High</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wasting prevalence  _Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wasting prevalence  _Mean]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Wasting prevalence  _Mean</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wasting prevalence  _CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wasting prevalence  _CI_Low]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Wasting prevalence  _CI_Low</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wasting prevalence  _CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wasting prevalence  _CI_High]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Wasting prevalence  _CI_High</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe wasting prevalence  _Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe wasting prevalence  _Mean]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Severe wasting prevalence  _Mean</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe wasting prevalence  _CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe wasting prevalence  _CI_Low]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Severe wasting prevalence  _CI_Low</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe wasting prevalence  _CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe wasting prevalence  _CI_High]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Severe wasting prevalence  _CI_High</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overweight prevalence  _Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overweight prevalence  _Mean]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Overweight prevalence  _Mean</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overweight prevalence  _CI_Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overweight prevalence  _CI_Low]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Overweight prevalence  _CI_Low</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overweight prevalence  _CI_High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overweight prevalence  _CI_High]</local-name>
            <parent-name>[wealth_reshape_quint.csv]</parent-name>
            <remote-alias>Overweight prevalence  _CI_High</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age Range (wealth reshape quint.csv)' datatype='string' name='[Age Range (wealth_reshape_quint.csv)]' role='dimension' type='nominal' />
      <column caption='Sum Malnutrition' datatype='real' name='[Calculation_1206964721517244417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Stunting prevalence  (%)_Mean])&#13;&#10;+AVG([Underweight prevalence  (%)_Mean])&#13;&#10;+AVG([Wasting prevalence  (%)_Mean])&#13;&#10;+AVG([Severe wasting prevalence  (%)_Mean])&#13;&#10;+AVG([Overweight prevalence  (%)_Mean])' />
      </column>
      <column caption='Location Scale' datatype='string' name='[Calculation_1206964721544204292]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
      </column>
      <column caption='Overweight Change' datatype='real' name='[Calculation_1206964721565147141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE  [Calculation_1206964721544204292] :MAX ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})-1)*100' />
      </column>
      <column caption='Malnutrition Type' datatype='real' datatype-customized='true' name='[Calculation_1326873061413584900]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Stunting&quot; THEN AVG([Stunting prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Underweight&quot; THEN AVG([Underweight prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Wasting&quot; THEN AVG([Wasting prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Severe Wasting&quot; THEN AVG([Severe wasting prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Overweight&quot; THEN AVG([Overweight prevalence  (%)_Mean])&#13;&#10;END' />
      </column>
      <column caption='Wealth Location Scale' datatype='string' name='[Calculation_1469862350293041159]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Location Scale (copy)_1469862350291353605]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
      </column>
      <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='false' value='&quot;Central Africa&quot;'>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Gabon&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Central Asia&quot;'>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East Africa&quot;'>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;United Republic of Tanzania&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Republic of Moldova&quot;</value>
            <value>&quot;Serbia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Africa&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Tunisia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Oceania&quot;'>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South America&quot;'>
            <value>&quot;Bolivia (Plurinational State of)&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Suriname&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern Africa&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern Asia&quot;'>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Viet Nam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West Africa&quot;'>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Côte d&apos;Ivoire&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Togo&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Türkiye&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Wealth Sub-Region' datatype='string' name='[Country (wealth reshape quint.csv) (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country (wealth_reshape_quint.csv)]' new-bin='true'>
          <bin default-name='false' value='&quot;Central Africa&quot;'>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Gabon&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Central Asia&quot;'>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East Africa&quot;'>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;United Republic of Tanzania&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Republic of Moldova&quot;</value>
            <value>&quot;Serbia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Africa&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Tunisia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Oceania&quot;'>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South America&quot;'>
            <value>&quot;Bolivia (Plurinational State of)&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Suriname&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern Africa&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern Asia&quot;'>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Viet Nam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West Africa&quot;'>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Côte d&apos;Ivoire&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Togo&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Western Asia&quot;'>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Türkiye&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Country (wealth reshape quint.csv)' datatype='string' name='[Country (wealth_reshape_quint.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Data Source (wealth reshape quint.csv)' datatype='string' name='[Data Source (wealth_reshape_quint.csv)]' role='dimension' type='nominal' />
      <column caption='Malnutrition vs Wealth' datatype='real' datatype-customized='true' name='[Malnutrition Change (copy)_1469862350255075330]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Malnutrition Change (copy)_1469862350254456833]&#13;&#10;WHEN &quot;Stunting&quot; THEN [Overweight Change (copy)_1271422491603283969]&#13;&#10;WHEN &quot;Wasting&quot; THEN [Stunting Change (copy)_1271422491604131842]&#13;&#10;WHEN &quot;Severe Wasting&quot; THEN [Stunting Change (copy)_1271422491605635075]&#13;&#10;WHEN &quot;Overweight&quot; THEN [Calculation_1206964721565147141]&#13;&#10;WHEN &quot;Underweight&quot; THEN [Overweight Change (copy)_1271422491605864452]&#13;&#10;END' />
      </column>
      <column caption='Malnutrition Change' datatype='real' datatype-customized='true' name='[Malnutrition Type (copy)_1206964721532067843]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Malnutrition Type (copy)_1271422491595653120]&#13;&#10;WHEN &quot;Stunting Change&quot; THEN [Overweight Change (copy)_1271422491603283969]&#13;&#10;WHEN &quot;Wasting Change&quot; THEN [Stunting Change (copy)_1271422491604131842]&#13;&#10;WHEN &quot;Severe Wasting Change&quot; THEN [Stunting Change (copy)_1271422491605635075]&#13;&#10;WHEN &quot;Overweight Change&quot; THEN [Calculation_1206964721565147141]&#13;&#10;WHEN &quot;Underweight Change&quot; THEN [Overweight Change (copy)_1271422491605864452]&#13;&#10;END' />
      </column>
      <column caption='Overweight Newest' datatype='real' name='[Overweight Change (copy)_1206964721566859270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM({FIXED [Country]:SUM(IF [Year] = {FIXED [Country] : MAX ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})' />
      </column>
      <column caption='Overweight Oldest' datatype='real' name='[Overweight Change (copy)_1206964721567010823]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM({FIXED [Country]:SUM(IF [Year] = {FIXED [Country] : MIN ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})' />
      </column>
      <column caption='Stunting Change' datatype='real' name='[Overweight Change (copy)_1271422491603283969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Stunting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Stunting prevalence  (%)_Mean] END)})-1)*100' />
      </column>
      <column caption='Underweight Change' datatype='real' name='[Overweight Change (copy)_1271422491605864452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Underweight prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Underweight prevalence  (%)_Mean] END)})-1)*100' />
      </column>
      <column caption='Overweight prevalence  (%) CI High' datatype='real' name='[Overweight prevalence  (%)_CI_High]' role='measure' type='quantitative' />
      <column caption='Overweight prevalence  (%) CI Low' datatype='real' name='[Overweight prevalence  (%)_CI_Low]' role='measure' type='quantitative' />
      <column caption='Overweight prevalence  (%) Mean' datatype='real' name='[Overweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
      <column caption='Overweight prevalence   CI High' datatype='real' name='[Overweight prevalence  _CI_High]' role='measure' type='quantitative' />
      <column caption='Overweight prevalence   CI Low' datatype='real' name='[Overweight prevalence  _CI_Low]' role='measure' type='quantitative' />
      <column caption='Overweight prevalence   Mean' datatype='real' name='[Overweight prevalence  _Mean]' role='measure' type='quantitative' />
      <column caption='Severe wasting prevalence  (%) CI High' datatype='real' name='[Severe wasting prevalence  (%)_CI_High]' role='measure' type='quantitative' />
      <column caption='Severe wasting prevalence  (%) CI Low' datatype='real' name='[Severe wasting prevalence  (%)_CI_Low]' role='measure' type='quantitative' />
      <column caption='Severe wasting prevalence  (%) Mean' datatype='real' name='[Severe wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
      <column caption='Severe wasting prevalence   CI High' datatype='real' name='[Severe wasting prevalence  _CI_High]' role='measure' type='quantitative' />
      <column caption='Severe wasting prevalence   CI Low' datatype='real' name='[Severe wasting prevalence  _CI_Low]' role='measure' type='quantitative' />
      <column caption='Severe wasting prevalence   Mean' datatype='real' name='[Severe wasting prevalence  _Mean]' role='measure' type='quantitative' />
      <column caption='Wasting Change' datatype='real' name='[Stunting Change (copy)_1271422491604131842]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Wasting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Wasting prevalence  (%)_Mean] END)})-1)*100' />
      </column>
      <column caption='Severe Wasting Change' datatype='real' name='[Stunting Change (copy)_1271422491605635075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Severe wasting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Severe wasting prevalence  (%)_Mean] END)})-1)*100' />
      </column>
      <column caption='Stunting prevalence  (%) CI High' datatype='real' name='[Stunting prevalence  (%)_CI_High]' role='measure' type='quantitative' />
      <column caption='Stunting prevalence  (%) CI Low' datatype='real' name='[Stunting prevalence  (%)_CI_Low]' role='measure' type='quantitative' />
      <column caption='Stunting prevalence  (%) Mean' datatype='real' name='[Stunting prevalence  (%)_Mean]' role='measure' type='quantitative' />
      <column caption='Stunting prevalence   CI High' datatype='real' name='[Stunting prevalence  _CI_High]' role='measure' type='quantitative' />
      <column caption='Stunting prevalence   CI Low' datatype='real' name='[Stunting prevalence  _CI_Low]' role='measure' type='quantitative' />
      <column caption='Stunting prevalence   Mean' datatype='real' name='[Stunting prevalence  _Mean]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
          <bin default-name='false' value='&quot;Africa&quot;'>
            <value>&quot;Central Africa&quot;</value>
            <value>&quot;East Africa&quot;</value>
            <value>&quot;North Africa&quot;</value>
            <value>&quot;Southern Africa&quot;</value>
            <value>&quot;West Africa&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Americas&quot;'>
            <value>&quot;Central America &amp; Caribbean&quot;</value>
            <value>&quot;South America&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asia&quot;'>
            <value>&quot;Central Asia&quot;</value>
            <value>&quot;Southern Asia&quot;</value>
            <value>&quot;Westerrn Asia&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Europe&quot;'>
            <value>&quot;Europe&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Oceania&quot;'>
            <value>&quot;Oceania&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Underweight prevalence  (%) CI High' datatype='real' name='[Underweight prevalence  (%)_CI_High]' role='measure' type='quantitative' />
      <column caption='Underweight prevalence  (%) CI Low' datatype='real' name='[Underweight prevalence  (%)_CI_Low]' role='measure' type='quantitative' />
      <column caption='Underweight prevalence  (%) Mean' datatype='real' name='[Underweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
      <column caption='Underweight prevalence   CI High' datatype='real' name='[Underweight prevalence  _CI_High]' role='measure' type='quantitative' />
      <column caption='Underweight prevalence   CI Low' datatype='real' name='[Underweight prevalence  _CI_Low]' role='measure' type='quantitative' />
      <column caption='Underweight prevalence   Mean' datatype='real' name='[Underweight prevalence  _Mean]' role='measure' type='quantitative' />
      <column caption='Wasting prevalence  (%) CI High' datatype='real' name='[Wasting prevalence  (%)_CI_High]' role='measure' type='quantitative' />
      <column caption='Wasting prevalence  (%) CI Low' datatype='real' name='[Wasting prevalence  (%)_CI_Low]' role='measure' type='quantitative' />
      <column caption='Wasting prevalence  (%) Mean' datatype='real' name='[Wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
      <column caption='Wasting prevalence   CI High' datatype='real' name='[Wasting prevalence  _CI_High]' role='measure' type='quantitative' />
      <column caption='Wasting prevalence   CI Low' datatype='real' name='[Wasting prevalence  _CI_Low]' role='measure' type='quantitative' />
      <column caption='Wasting prevalence   Mean' datatype='real' name='[Wasting prevalence  _Mean]' role='measure' type='quantitative' />
      <column caption='Wealth Continents' datatype='string' name='[Wealth Sub-Region (copy)_1469862350290366467]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country (wealth_reshape_quint.csv)]' new-bin='true'>
          <bin default-name='false' value='&quot;Africa&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Côte d&apos;Ivoire&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;United Republic of Tanzania&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Americas&quot;'>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bolivia (Plurinational State of)&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Asia&quot;'>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Türkiye&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Viet Nam&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Republic of Moldova&quot;</value>
            <value>&quot;Serbia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Oceania&quot;'>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Year (wealth quint df final.csv)' datatype='date' name='[Year (wealth_quint_df_final.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (wealth reshape quint.csv)' datatype='date' name='[Year (wealth_reshape_quint.csv)]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='ages_merge_mal.csv' datatype='table' name='[__tableau_internal_object_id__].[ages_merge_mal.csv_81142436558143D88352D0F1BDFF874A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='wealth_reshape_quint.csv' datatype='table' name='[__tableau_internal_object_id__].[wealth_reshape_quint.csv_A1B66B04863546BCAE7E66B611FD0CC6]' role='measure' type='quantitative' />
      <column-instance column='[Overweight prevalence  _Mean]' derivation='Avg' name='[avg:Overweight prevalence  _Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overweight prevalence  _Mean]' derivation='Sum' name='[sum:Overweight prevalence  _Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Severe wasting prevalence  _Mean]' derivation='Sum' name='[sum:Severe wasting prevalence  _Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Stunting prevalence  _Mean]' derivation='Sum' name='[sum:Stunting prevalence  _Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Underweight prevalence  _Mean]' derivation='Sum' name='[sum:Underweight prevalence  _Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wasting prevalence  _Mean]' derivation='Sum' name='[sum:Wasting prevalence  _Mean:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country (group),Country)' hidden='true' name='[Action (Country (group),Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (group)]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Continent)' hidden='true' name='[Action (Country,Continent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Sub-Region (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Location Scale,Wealth Continents)' hidden='true' name='[Action (Location Scale,Wealth Continents)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1206964721544204292]' />
          <groupfilter function='level-members' level='[Wealth Sub-Region (copy)_1469862350290366467]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Region)' hidden='true' name='[Action (Sub-Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Region,Country)' hidden='true' name='[Action (Sub-Region,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (group)]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Region,Country,Continent)' hidden='true' name='[Action (Sub-Region,Country,Continent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (group)]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Sub-Region (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Wealth Continents)' hidden='true' name='[Action (Wealth Continents)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Wealth Sub-Region (copy)_1469862350290366467]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country (wealth reshape quint.csv), Wealth Sub-Region'>
          <field>[Wealth Sub-Region (copy)_1469862350290366467]</field>
          <field>[Country (wealth reshape quint.csv) (group)]</field>
          <field>[Country (wealth_reshape_quint.csv)]</field>
        </drill-path>
        <drill-path name='Country, Country (group)'>
          <field>[Sub-Region (group)]</field>
          <field>[Country (group)]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.893421' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.106579' rowDisplayCount='600' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country (wealth reshape quint.csv) (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;North Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Central Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Africa&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central America &amp; Caribbean&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q1 (Poorest)_Mean:qk]]]>&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q5 (Richest)_Mean:qk]]]>&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Overweight prevalence in children aged < 5 years (\%)Q4_Mean:qk]]]>&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q4_Mean:qk]]]>&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Stunting prevalence  _Mean:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Overweight prevalence  _Mean:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q3_Mean:qk]]]>&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Wasting prevalence  _Mean:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q2_Mean:qk]]]>&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Underweight prevalence  _Mean:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Severe wasting prevalence  _Mean:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;East Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Westerrn Asia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Africa&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Belize, Cuba, Dominican Republic and 6 more&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Calculation_1469862350293041159' />
        <field-sort-custom-order field='Country (wealth_reshape_quint.csv)' />
        <field-sort-custom-order field='Year (wealth_reshape_quint.csv)' />
        <field-sort-custom-order field='Data Source (wealth_reshape_quint.csv)' />
        <field-sort-custom-order field='Calculation_1469862350291607558' />
        <field-sort-custom-order field='Age Range (wealth_reshape_quint.csv)' />
        <field-sort-custom-order field='Wealth Quintile' />
        <field-sort-custom-order field='Stunting prevalence  _Mean' />
        <field-sort-custom-order field='Stunting prevalence  _CI_Low' />
        <field-sort-custom-order field='Stunting prevalence  _CI_High' />
        <field-sort-custom-order field='Underweight prevalence  _Mean' />
        <field-sort-custom-order field='Underweight prevalence  _CI_Low' />
        <field-sort-custom-order field='Underweight prevalence  _CI_High' />
        <field-sort-custom-order field='Wasting prevalence  _Mean' />
        <field-sort-custom-order field='Wasting prevalence  _CI_Low' />
        <field-sort-custom-order field='Wasting prevalence  _CI_High' />
        <field-sort-custom-order field='Severe wasting prevalence  _Mean' />
        <field-sort-custom-order field='Severe wasting prevalence  _CI_Low' />
        <field-sort-custom-order field='Severe wasting prevalence  _CI_High' />
        <field-sort-custom-order field='Overweight prevalence  _Mean' />
        <field-sort-custom-order field='Overweight prevalence  _CI_Low' />
        <field-sort-custom-order field='Overweight prevalence  _CI_High' />
        <field-sort-custom-order field='Wealth Sub-Region (copy)_1469862350290366467' />
        <field-sort-custom-order field='Country (wealth reshape quint.csv) (group)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Wealth Location Scale' datatype='string' name='[Location Scale (copy)_1469862350291353605]' param-domain-type='list' role='measure' type='nominal' value='&quot;Country&quot;'>
          <calculation class='tableau' formula='&quot;Country&quot;' />
        </column>
        <column alias='Severe Wasting' caption='Malnutrition vs Wealth' datatype='string' name='[Malnutrition Change (copy)_1469862350254456833]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting &quot;'>
          <calculation class='tableau' formula='&quot;Severe Wasting &quot;' />
          <aliases>
            <alias key='&quot;Overweight&quot;' value='Overweight' />
            <alias key='&quot;Severe Wasting &quot;' value='Severe Wasting' />
            <alias key='&quot;Stunting&quot;' value='Stunting' />
            <alias key='&quot;Underweight&quot;' value='Underweight' />
            <alias key='&quot;Wasting&quot;' value='Wasting' />
          </aliases>
        </column>
        <column alias='Severe Wasting Change' caption='Malnutrition Change' datatype='string' name='[Malnutrition Type (copy)_1271422491595653120]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting Change&quot;'>
          <calculation class='tableau' formula='&quot;Severe Wasting Change&quot;' />
          <aliases>
            <alias key='&quot;Overweight Change&quot;' value='Overweight Change' />
            <alias key='&quot;Severe Wasting Change&quot;' value='Severe Wasting Change' />
            <alias key='&quot;Stunting Change&quot;' value='Stunting Change' />
            <alias key='&quot;Underweight Change&quot;' value='Underweight Change' />
            <alias key='&quot;Wasting Change&quot;' value='Wasting Change' />
          </aliases>
        </column>
        <column alias='Severe Wasting' caption='Malnutrition Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting&quot;'>
          <calculation class='tableau' formula='&quot;Severe Wasting&quot;' />
          <aliases>
            <alias key='&quot;Overweight&quot;' value='Overweight' />
            <alias key='&quot;Severe Wasting&quot;' value='Severe Wasting' />
            <alias key='&quot;Stunting&quot;' value='Stunting' />
            <alias key='&quot;Underweight&quot;' value='Underweight' />
            <alias key='&quot;Wasting&quot;' value='Wasting' />
          </aliases>
        </column>
        <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
          <calculation class='tableau' formula='&quot;Continent&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ages_merge_mal.csv' id='ages_merge_mal.csv_81142436558143D88352D0F1BDFF874A'>
            <properties context=''>
              <relation connection='textscan.1x588eq0ipe33x15rxi950asil1o' name='ages_merge_mal.csv' table='[ages_merge_mal#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='string' name='Data Source' ordinal='2' />
                  <column datatype='string' name='Age Range' ordinal='3' />
                  <column datatype='real' name='Stunting prevalence  (%)_Mean' ordinal='4' />
                  <column datatype='real' name='Stunting prevalence  (%)_CI_Low' ordinal='5' />
                  <column datatype='real' name='Stunting prevalence  (%)_CI_High' ordinal='6' />
                  <column datatype='real' name='Underweight prevalence  (%)_Mean' ordinal='7' />
                  <column datatype='real' name='Underweight prevalence  (%)_CI_Low' ordinal='8' />
                  <column datatype='real' name='Underweight prevalence  (%)_CI_High' ordinal='9' />
                  <column datatype='real' name='Wasting prevalence  (%)_Mean' ordinal='10' />
                  <column datatype='real' name='Wasting prevalence  (%)_CI_Low' ordinal='11' />
                  <column datatype='real' name='Wasting prevalence  (%)_CI_High' ordinal='12' />
                  <column datatype='real' name='Severe wasting prevalence  (%)_Mean' ordinal='13' />
                  <column datatype='real' name='Severe wasting prevalence  (%)_CI_Low' ordinal='14' />
                  <column datatype='real' name='Severe wasting prevalence  (%)_CI_High' ordinal='15' />
                  <column datatype='real' name='Overweight prevalence  (%)_Mean' ordinal='16' />
                  <column datatype='real' name='Overweight prevalence  (%)_CI_Low' ordinal='17' />
                  <column datatype='real' name='Overweight prevalence  (%)_CI_High' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='wealth_reshape_quint.csv' id='wealth_reshape_quint.csv_A1B66B04863546BCAE7E66B611FD0CC6'>
            <properties context=''>
              <relation connection='textscan.0i3c2h71etgv3g12ly7jt0gahjev' name='wealth_reshape_quint.csv' table='[wealth_reshape_quint#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='string' name='Data Source' ordinal='3' />
                  <column datatype='string' name='Age Range' ordinal='4' />
                  <column datatype='string' name='Wealth Quintile' ordinal='5' />
                  <column datatype='real' name='Stunting prevalence  _Mean' ordinal='6' />
                  <column datatype='real' name='Stunting prevalence  _CI_Low' ordinal='7' />
                  <column datatype='real' name='Stunting prevalence  _CI_High' ordinal='8' />
                  <column datatype='real' name='Underweight prevalence  _Mean' ordinal='9' />
                  <column datatype='real' name='Underweight prevalence  _CI_Low' ordinal='10' />
                  <column datatype='real' name='Underweight prevalence  _CI_High' ordinal='11' />
                  <column datatype='real' name='Wasting prevalence  _Mean' ordinal='12' />
                  <column datatype='real' name='Wasting prevalence  _CI_Low' ordinal='13' />
                  <column datatype='real' name='Wasting prevalence  _CI_High' ordinal='14' />
                  <column datatype='real' name='Severe wasting prevalence  _Mean' ordinal='15' />
                  <column datatype='real' name='Severe wasting prevalence  _CI_Low' ordinal='16' />
                  <column datatype='real' name='Severe wasting prevalence  _CI_High' ordinal='17' />
                  <column datatype='real' name='Overweight prevalence  _Mean' ordinal='18' />
                  <column datatype='real' name='Overweight prevalence  _CI_Low' ordinal='19' />
                  <column datatype='real' name='Overweight prevalence  _CI_High' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (wealth_reshape_quint.csv)]' />
            </expression>
            <first-end-point object-id='ages_merge_mal.csv_81142436558143D88352D0F1BDFF874A' />
            <second-end-point object-id='wealth_reshape_quint.csv_A1B66B04863546BCAE7E66B611FD0CC6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_064348835E624D8CA9FAD8CC6D654823]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Malnutrition Dash' type='sheet' worksheet='Malnutrition Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Malnutrition Dash' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_748C6D5C559A491787784C99C718AED0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Multi Meas Dash' type='sheet' worksheet='Multi Meas Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Multi Meas Dash' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_A943E12CD4404790892B7C097F19C2CA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 4' type='sheet' worksheet='Malnutrition by Wealth Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 4' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B05812D7B65F46769641306D522CCD8D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Mal Change Trial Dash' type='sheet' worksheet='Mal Change Trial Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mal Change Trial Dash' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Mal Change Trial Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Severe Wasting Change' caption='Malnutrition Change' datatype='string' name='[Malnutrition Type (copy)_1271422491595653120]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting Change&quot;'>
              <calculation class='tableau' formula='&quot;Severe Wasting Change&quot;' />
              <aliases>
                <alias key='&quot;Overweight Change&quot;' value='Overweight Change' />
                <alias key='&quot;Severe Wasting Change&quot;' value='Severe Wasting Change' />
                <alias key='&quot;Stunting Change&quot;' value='Stunting Change' />
                <alias key='&quot;Underweight Change&quot;' value='Underweight Change' />
                <alias key='&quot;Wasting Change&quot;' value='Wasting Change' />
              </aliases>
            </column>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column caption='Location Scale' datatype='string' name='[Calculation_1206964721544204292]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
            </column>
            <column caption='Overweight Change' datatype='real' name='[Calculation_1206964721565147141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE  [Calculation_1206964721544204292] :MAX ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Malnutrition Change' datatype='real' datatype-customized='true' name='[Malnutrition Type (copy)_1206964721532067843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Malnutrition Type (copy)_1271422491595653120]&#13;&#10;WHEN &quot;Stunting Change&quot; THEN [Overweight Change (copy)_1271422491603283969]&#13;&#10;WHEN &quot;Wasting Change&quot; THEN [Stunting Change (copy)_1271422491604131842]&#13;&#10;WHEN &quot;Severe Wasting Change&quot; THEN [Stunting Change (copy)_1271422491605635075]&#13;&#10;WHEN &quot;Overweight Change&quot; THEN [Calculation_1206964721565147141]&#13;&#10;WHEN &quot;Underweight Change&quot; THEN [Overweight Change (copy)_1271422491605864452]&#13;&#10;END' />
            </column>
            <column caption='Stunting Change' datatype='real' name='[Overweight Change (copy)_1271422491603283969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Stunting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Stunting prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Underweight Change' datatype='real' name='[Overweight Change (copy)_1271422491605864452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Underweight prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Underweight prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Overweight prevalence  (%) Mean' datatype='real' name='[Overweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Severe wasting prevalence  (%) Mean' datatype='real' name='[Severe wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Wasting Change' datatype='real' name='[Stunting Change (copy)_1271422491604131842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Wasting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Wasting prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Severe Wasting Change' datatype='real' name='[Stunting Change (copy)_1271422491605635075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Severe wasting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Severe wasting prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Stunting prevalence  (%) Mean' datatype='real' name='[Stunting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Underweight prevalence  (%) Mean' datatype='real' name='[Underweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Wasting prevalence  (%) Mean' datatype='real' name='[Wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1206964721544204292]' derivation='None' name='[none:Calculation_1206964721544204292:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Malnutrition Type (copy)_1206964721532067843]' derivation='User' name='[usr:Malnutrition Type (copy)_1206964721532067843:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Central Africa&quot;</bucket>
              <bucket>&quot;Central America &amp; Caribbean&quot;</bucket>
              <bucket>&quot;Central Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;East Africa&quot;</bucket>
              <bucket>&quot;North Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Southern Africa&quot;</bucket>
              <bucket>&quot;Southern Asia&quot;</bucket>
              <bucket>&quot;West Africa&quot;</bucket>
              <bucket>&quot;Westerrn Asia&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1206964721544204292:nk]' />
              <groupfilter function='member' level='[none:Calculation_1206964721544204292:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Longitude (generated)]' field-type='quantitative' max='18562286.918316372' min='-21942943.591627672' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Latitude (generated)]' field-type='quantitative' max='10809844.636662925' min='-4100056.5718640075' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' />
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]' />
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]' />
              <geometry column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Latitude (generated)]</rows>
        <cols>([Parameters].[Parameter 2] * [federated.0dw3dx91p5fjmx16u1m940hnahsx].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{329BB489-6D93-4AE0-9DA7-FFE0388E2F9B}' />
    </worksheet>
    <worksheet name='Maln Change Trial'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Severe Wasting Change' caption='Malnutrition Change' datatype='string' name='[Malnutrition Type (copy)_1271422491595653120]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting Change&quot;'>
              <calculation class='tableau' formula='&quot;Severe Wasting Change&quot;' />
              <aliases>
                <alias key='&quot;Overweight Change&quot;' value='Overweight Change' />
                <alias key='&quot;Severe Wasting Change&quot;' value='Severe Wasting Change' />
                <alias key='&quot;Stunting Change&quot;' value='Stunting Change' />
                <alias key='&quot;Underweight Change&quot;' value='Underweight Change' />
                <alias key='&quot;Wasting Change&quot;' value='Wasting Change' />
              </aliases>
            </column>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column caption='Location Scale' datatype='string' name='[Calculation_1206964721544204292]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
            </column>
            <column caption='Overweight Change' datatype='real' name='[Calculation_1206964721565147141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE  [Calculation_1206964721544204292] :MAX ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Overweight prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Malnutrition Change' datatype='real' datatype-customized='true' name='[Malnutrition Type (copy)_1206964721532067843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Malnutrition Type (copy)_1271422491595653120]&#13;&#10;WHEN &quot;Stunting Change&quot; THEN [Overweight Change (copy)_1271422491603283969]&#13;&#10;WHEN &quot;Wasting Change&quot; THEN [Stunting Change (copy)_1271422491604131842]&#13;&#10;WHEN &quot;Severe Wasting Change&quot; THEN [Stunting Change (copy)_1271422491605635075]&#13;&#10;WHEN &quot;Overweight Change&quot; THEN [Calculation_1206964721565147141]&#13;&#10;WHEN &quot;Underweight Change&quot; THEN [Overweight Change (copy)_1271422491605864452]&#13;&#10;END' />
            </column>
            <column caption='Stunting Change' datatype='real' name='[Overweight Change (copy)_1271422491603283969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Stunting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Stunting prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Underweight Change' datatype='real' name='[Overweight Change (copy)_1271422491605864452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Underweight prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Underweight prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Overweight prevalence  (%) Mean' datatype='real' name='[Overweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Severe wasting prevalence  (%) Mean' datatype='real' name='[Severe wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Wasting Change' datatype='real' name='[Stunting Change (copy)_1271422491604131842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Wasting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Wasting prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Severe Wasting Change' datatype='real' name='[Stunting Change (copy)_1271422491605635075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MAX ( [Year] ) } THEN [Severe wasting prevalence  (%)_Mean] END)})/ SUM({INCLUDE [Calculation_1206964721544204292]:SUM(IF [Year] = {INCLUDE [Calculation_1206964721544204292] : MIN ( [Year] ) } THEN [Severe wasting prevalence  (%)_Mean] END)})-1)*100' />
            </column>
            <column caption='Stunting prevalence  (%) Mean' datatype='real' name='[Stunting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Underweight prevalence  (%) Mean' datatype='real' name='[Underweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Wasting prevalence  (%) Mean' datatype='real' name='[Wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1206964721544204292]' derivation='None' name='[none:Calculation_1206964721544204292:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Malnutrition Type (copy)_1206964721532067843]' derivation='User' name='[usr:Malnutrition Type (copy)_1206964721532067843:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Action (Country,Continent)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_B05812D7B65F46769641306D522CCD8D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Sub-Region (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]'>
            <groupfilter function='member' level='[none:Age Range:nk]' member='&quot;5 and Under&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]' included-values='in-range-or-null'>
            <min>#1991-01-01 00:00:00#</min>
            <max>#2019-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Action (Country,Continent)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]</rows>
        <cols>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</cols>
      </table>
      <simple-id uuid='{4BB3E7D1-8030-49C3-BD23-FC6F863E98D7}' />
    </worksheet>
    <worksheet name='Malnutrition'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Severe Wasting' caption='Malnutrition Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting&quot;'>
              <calculation class='tableau' formula='&quot;Severe Wasting&quot;' />
              <aliases>
                <alias key='&quot;Overweight&quot;' value='Overweight' />
                <alias key='&quot;Severe Wasting&quot;' value='Severe Wasting' />
                <alias key='&quot;Stunting&quot;' value='Stunting' />
                <alias key='&quot;Underweight&quot;' value='Underweight' />
                <alias key='&quot;Wasting&quot;' value='Wasting' />
              </aliases>
            </column>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column caption='Location Scale' datatype='string' name='[Calculation_1206964721544204292]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
            </column>
            <column caption='Malnutrition Type' datatype='real' datatype-customized='true' name='[Calculation_1326873061413584900]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Stunting&quot; THEN AVG([Stunting prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Underweight&quot; THEN AVG([Underweight prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Wasting&quot; THEN AVG([Wasting prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Severe Wasting&quot; THEN AVG([Severe wasting prevalence  (%)_Mean])&#13;&#10;WHEN &quot;Overweight&quot; THEN AVG([Overweight prevalence  (%)_Mean])&#13;&#10;END' />
            </column>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Overweight prevalence  (%) Mean' datatype='real' name='[Overweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Severe wasting prevalence  (%) Mean' datatype='real' name='[Severe wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Stunting prevalence  (%) Mean' datatype='real' name='[Stunting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Underweight prevalence  (%) Mean' datatype='real' name='[Underweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Wasting prevalence  (%) Mean' datatype='real' name='[Wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1206964721544204292]' derivation='None' name='[none:Calculation_1206964721544204292:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1326873061413584900]' derivation='User' name='[usr:Calculation_1326873061413584900:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]'>
            <groupfilter function='member' level='[none:Age Range:nk]' member='&quot;2-5 Years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]' included-values='in-range'>
            <min>#1991-01-01 00:00:00#</min>
            <max>#2017-09-01 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Calculation_1326873061413584900:qk]' scope='rows' value='% of Population' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Calculation_1326873061413584900:qk]</rows>
        <cols>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</cols>
      </table>
      <simple-id uuid='{AA7A3793-1DA7-46A8-A3EF-15857783835D}' />
    </worksheet>
    <worksheet name='Malnutrition Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Central Africa&quot;</bucket>
              <bucket>&quot;Central America &amp; Caribbean&quot;</bucket>
              <bucket>&quot;Central Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;East Africa&quot;</bucket>
              <bucket>&quot;North Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Southern Africa&quot;</bucket>
              <bucket>&quot;Southern Asia&quot;</bucket>
              <bucket>&quot;West Africa&quot;</bucket>
              <bucket>&quot;Westerrn Asia&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]'>
            <groupfilter function='level-members' level='[Sub-Region (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Longitude (generated)]' field-type='quantitative' max='20001796.268111639' min='-25004015.057599053' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Latitude (generated)]' field-type='quantitative' max='10085924.179179238' min='-6480632.5896116504' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]' />
              <color column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' />
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]' />
              <geometry column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Latitude (generated)]</rows>
        <cols>([Parameters].[Parameter 2] * [federated.0dw3dx91p5fjmx16u1m940hnahsx].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{D895291C-3B6E-4C0D-A6FE-EC7DDEA30ADF}' />
    </worksheet>
    <worksheet name='Malnutrition by Wealth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Wealth Malnutrition Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column caption='Location Scale' datatype='string' name='[Calculation_1206964721544204292]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
            </column>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country (wealth reshape quint.csv)' datatype='string' name='[Country (wealth_reshape_quint.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Overweight prevalence   Mean' datatype='real' name='[Overweight prevalence  _Mean]' role='measure' type='quantitative' />
            <column caption='Severe wasting prevalence   Mean' datatype='real' name='[Severe wasting prevalence  _Mean]' role='measure' type='quantitative' />
            <column caption='Stunting prevalence   Mean' datatype='real' name='[Stunting prevalence  _Mean]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Underweight prevalence   Mean' datatype='real' name='[Underweight prevalence  _Mean]' role='measure' type='quantitative' />
            <column caption='Wasting prevalence   Mean' datatype='real' name='[Wasting prevalence  _Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[Wealth Quintile]' role='dimension' type='nominal' />
            <column caption='Wealth Continents' datatype='string' name='[Wealth Sub-Region (copy)_1469862350290366467]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (wealth_reshape_quint.csv)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Calculation_1206964721544204292]' derivation='None' name='[none:Calculation_1206964721544204292:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wealth Quintile]' derivation='None' name='[none:Wealth Quintile:nk]' pivot='key' type='nominal' />
            <column-instance column='[Overweight prevalence  _Mean]' derivation='Sum' name='[sum:Overweight prevalence  _Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Severe wasting prevalence  _Mean]' derivation='Sum' name='[sum:Severe wasting prevalence  _Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stunting prevalence  _Mean]' derivation='Sum' name='[sum:Stunting prevalence  _Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Underweight prevalence  _Mean]' derivation='Sum' name='[sum:Underweight prevalence  _Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wasting prevalence  _Mean]' derivation='Sum' name='[sum:Wasting prevalence  _Mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Stunting prevalence  _Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Underweight prevalence  _Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Wasting prevalence  _Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Severe wasting prevalence  _Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q2_Mean:qk]]]>&quot;</bucket>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q4_Mean:qk]]]>&quot;</bucket>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q3_Mean:qk]]]>&quot;</bucket>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q5 (Richest)_Mean:qk]]]>&quot;</bucket>
              <bucket>&quot;<![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence in children aged < 5 years (\%)Q1 (Poorest)_Mean:qk]]]>&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Action (Wealth Continents)]'>
            <groupfilter function='level-members' level='[Wealth Sub-Region (copy)_1469862350290366467]' user:ui-action-filter='[Action4_A943E12CD4404790892B7C097F19C2CA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Action (Wealth Continents)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Multiple Values]</rows>
        <cols>([federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk] / ([federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Wealth Quintile:nk] / [federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{214EA5AA-7AB1-4F3D-A9C9-BB083982419B}' />
    </worksheet>
    <worksheet name='Malnutrition by Wealth Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Wealth Location Scale' datatype='string' name='[Location Scale (copy)_1469862350291353605]' param-domain-type='list' role='measure' type='nominal' value='&quot;Country&quot;'>
              <calculation class='tableau' formula='&quot;Country&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column caption='Wealth Location Scale' datatype='string' name='[Calculation_1469862350293041159]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Location Scale (copy)_1469862350291353605]&#13;&#10;WHEN &quot;Continent&quot; THEN [Sub-Region (group)]&#13;&#10;WHEN &quot;Sub-Region&quot; THEN[Country (group)]&#13;&#10;WHEN &quot;Country&quot; THEN [Country] &#13;&#10;END' />
            </column>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country (wealth reshape quint.csv)' datatype='string' name='[Country (wealth_reshape_quint.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Overweight prevalence   Mean' datatype='real' name='[Overweight prevalence  _Mean]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Wealth Continents' datatype='string' name='[Wealth Sub-Region (copy)_1469862350290366467]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (wealth_reshape_quint.csv)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Calculation_1469862350293041159]' derivation='None' name='[none:Calculation_1469862350293041159:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (wealth_reshape_quint.csv)]' derivation='None' name='[none:Country (wealth_reshape_quint.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Overweight prevalence  _Mean]' derivation='Sum' name='[sum:Overweight prevalence  _Mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Wealth Sub-Region (copy)_1469862350290366467]' />
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country (wealth_reshape_quint.csv):nk]' />
              <color column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]' />
              <geometry column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1469862350293041159:nk] * [federated.0dw3dx91p5fjmx16u1m940hnahsx].[Latitude (generated)])</rows>
        <cols>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F14CF3F7-AC60-4C0D-AF19-AF60765DF2B9}' />
    </worksheet>
    <worksheet name='Multi Meas Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sub-Region (group)]' />
              <groupfilter function='member' level='[Sub-Region (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' />
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]' />
              <lod column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]' />
              <geometry column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Latitude (generated)]</rows>
        <cols>([Parameters].[Parameter 2] * [federated.0dw3dx91p5fjmx16u1m940hnahsx].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{0999AC7F-72EE-4ABA-94A3-69F7A2BF2D59}' />
    </worksheet>
    <worksheet name='Multi Measure'>
      <table>
        <view>
          <datasources>
            <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
              <calculation class='tableau' formula='&quot;Continent&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
            <column caption='Sub-Region' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Central Africa&quot;'>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central America &amp; Caribbean&quot;'>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Africa&quot;'>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern Asia&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Lao People&apos;s Democratic Republic&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Africa&quot;'>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Côte d&apos;Ivoire&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Togo&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Westerrn Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Türkiye&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Overweight prevalence  (%) Mean' datatype='real' name='[Overweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Severe wasting prevalence  (%) Mean' datatype='real' name='[Severe wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Stunting prevalence  (%) Mean' datatype='real' name='[Stunting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Sub-Region (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Country (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Central Africa&quot;</value>
                  <value>&quot;East Africa&quot;</value>
                  <value>&quot;North Africa&quot;</value>
                  <value>&quot;Southern Africa&quot;</value>
                  <value>&quot;West Africa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Central America &amp; Caribbean&quot;</value>
                  <value>&quot;South America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Asia&quot;'>
                  <value>&quot;Central Asia&quot;</value>
                  <value>&quot;Southern Asia&quot;</value>
                  <value>&quot;Westerrn Asia&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Europe&quot;'>
                  <value>&quot;Europe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Oceania&quot;'>
                  <value>&quot;Oceania&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Underweight prevalence  (%) Mean' datatype='real' name='[Underweight prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column caption='Wasting prevalence  (%) Mean' datatype='real' name='[Wasting prevalence  (%)_Mean]' role='measure' type='quantitative' />
            <column-instance column='[Overweight prevalence  (%)_Mean]' derivation='Avg' name='[avg:Overweight prevalence  (%)_Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Severe wasting prevalence  (%)_Mean]' derivation='Avg' name='[avg:Severe wasting prevalence  (%)_Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stunting prevalence  (%)_Mean]' derivation='Avg' name='[avg:Stunting prevalence  (%)_Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Underweight prevalence  (%)_Mean]' derivation='Avg' name='[avg:Underweight prevalence  (%)_Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wasting prevalence  (%)_Mean]' derivation='Avg' name='[avg:Wasting prevalence  (%)_Mean:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Overweight prevalence  (\%)_Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Severe wasting prevalence  (\%)_Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Stunting prevalence  (\%)_Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Underweight prevalence  (\%)_Mean:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dw3dx91p5fjmx16u1m940hnahsx].[avg:Wasting prevalence  (\%)_Mean:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Action (Sub-Region,Country,Continent)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_AA3AB8602A4A46E59E00B37EA144157C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Sub-Region (group)]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]</column>
            <column>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Action (Sub-Region,Country,Continent)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Multiple Values]' scope='rows' value='% of Population' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Multiple Values]</rows>
        <cols>([Parameters].[Parameter 2] / [federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{EA47F224-7F14-4BF9-8C17-E7A60263604B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Wealth Location Scale' datatype='string' name='[Location Scale (copy)_1469862350291353605]' param-domain-type='list' role='measure' type='nominal' value='&quot;Country&quot;'>
          <calculation class='tableau' formula='&quot;Country&quot;' />
          <members>
            <member value='&quot;Continent&quot;' />
            <member value='&quot;Sub-Region&quot;' />
            <member value='&quot;Country&quot;' />
          </members>
        </column>
        <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
          <calculation class='tableau' formula='&quot;Continent&quot;' />
          <members>
            <member value='&quot;Continent&quot;' />
            <member value='&quot;Sub-Region&quot;' />
            <member value='&quot;Country&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='3' param='vert' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='49000' id='5' name='Malnutrition by Wealth Map' w='82400' x='800' y='1000'>
                <layout-cache minheight='20464' minwidth='282' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Malnutrition by Wealth Map' pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='compact' param='[Parameters].[Location Scale (copy)_1469862350291353605]' type-v2='paramctrl' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='12' name='Malnutrition by Wealth' pane-specification-id='1' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]' type-v2='color' w='16000' x='83200' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='13' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='31375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='10' param='vert' type-v2='layout-flow' w='98400' x='800' y='50000'>
            <zone h='49000' id='11' name='Malnutrition by Wealth' w='98400' x='800' y='50000'>
              <layout-cache minheight='304' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Malnutrition by Wealth Map' w='82400' x='800' y='1000'>
                  <layout-cache minheight='20464' minwidth='282' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Malnutrition by Wealth Map' pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='compact' param='[Parameters].[Location Scale (copy)_1469862350291353605]' type-v2='paramctrl' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='13' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='31375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Malnutrition by Wealth' w='98400' x='800' y='50000'>
                  <layout-cache minheight='304' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='12' name='Malnutrition by Wealth' pane-specification-id='1' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]' type-v2='color' w='16000' x='83200' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{267D3B59-D52F-4154-AF35-8BBD06520E87}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Mal Change Trial Dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Severe Wasting Change' caption='Malnutrition Change' datatype='string' name='[Malnutrition Type (copy)_1271422491595653120]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting Change&quot;'>
          <calculation class='tableau' formula='&quot;Severe Wasting Change&quot;' />
          <aliases>
            <alias key='&quot;Overweight Change&quot;' value='Overweight Change' />
            <alias key='&quot;Severe Wasting Change&quot;' value='Severe Wasting Change' />
            <alias key='&quot;Stunting Change&quot;' value='Stunting Change' />
            <alias key='&quot;Underweight Change&quot;' value='Underweight Change' />
            <alias key='&quot;Wasting Change&quot;' value='Wasting Change' />
          </aliases>
          <members>
            <member alias='Stunting Change' value='&quot;Stunting Change&quot;' />
            <member alias='Underweight Change' value='&quot;Underweight Change&quot;' />
            <member alias='Overweight Change' value='&quot;Overweight Change&quot;' />
            <member alias='Wasting Change' value='&quot;Wasting Change&quot;' />
            <member alias='Severe Wasting Change' value='&quot;Severe Wasting Change&quot;' />
          </members>
        </column>
        <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
          <calculation class='tableau' formula='&quot;Continent&quot;' />
          <members>
            <member value='&quot;Continent&quot;' />
            <member value='&quot;Sub-Region&quot;' />
            <member value='&quot;Country&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
        <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
        <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='1' param='vert' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Mal Change Trial Map' w='82400' x='800' y='1000'>
                <layout-cache minheight='284' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='6' name='Mal Change Trial Map' pane-specification-id='2' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='13' mode='compact' param='[Parameters].[Malnutrition Type (copy)_1271422491595653120]' type-v2='paramctrl' w='16000' x='83200' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='41' mode='dropdown' name='Maln Change Trial' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]' show-all='false' type-v2='filter' w='16000' x='83200' y='22125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='39' param='vert' type-v2='layout-flow' w='98400' x='800' y='50000'>
            <zone h='49000' id='40' name='Maln Change Trial' w='98400' x='800' y='50000'>
              <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='67' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='66' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Mal Change Trial Map' w='82400' x='800' y='1000'>
                  <layout-cache minheight='284' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='6' name='Mal Change Trial Map' pane-specification-id='2' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='7' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='13' mode='compact' param='[Parameters].[Malnutrition Type (copy)_1271422491595653120]' type-v2='paramctrl' w='16000' x='83200' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='41' mode='dropdown' name='Maln Change Trial' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]' show-all='false' type-v2='filter' w='16000' x='83200' y='22125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='40' is-fixed='true' name='Maln Change Trial' w='98400' x='800' y='50000'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F7E2F3DD-4928-4804-BE75-91D8FC8D8C88}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Malnutrition Dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ages_merge_mal.csv+ (Multiple Connections)' name='federated.0dw3dx91p5fjmx16u1m940hnahsx' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Severe Wasting' caption='Malnutrition Type' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Severe Wasting&quot;'>
          <calculation class='tableau' formula='&quot;Severe Wasting&quot;' />
          <aliases>
            <alias key='&quot;Overweight&quot;' value='Overweight' />
            <alias key='&quot;Severe Wasting&quot;' value='Severe Wasting' />
            <alias key='&quot;Stunting&quot;' value='Stunting' />
            <alias key='&quot;Underweight&quot;' value='Underweight' />
            <alias key='&quot;Wasting&quot;' value='Wasting' />
          </aliases>
          <members>
            <member alias='Stunting' value='&quot;Stunting&quot;' />
            <member alias='Underweight' value='&quot;Underweight&quot;' />
            <member alias='Wasting' value='&quot;Wasting&quot;' />
            <member alias='Severe Wasting' value='&quot;Severe Wasting&quot;' />
            <member alias='Overweight' value='&quot;Overweight&quot;' />
          </members>
        </column>
        <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
          <calculation class='tableau' formula='&quot;Continent&quot;' />
          <members>
            <member value='&quot;Continent&quot;' />
            <member value='&quot;Sub-Region&quot;' />
            <member value='&quot;Country&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0dw3dx91p5fjmx16u1m940hnahsx'>
        <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='74' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='72' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='69' param='horz' type-v2='layout-flow' w='82400' x='800' y='1000'>
                <zone h='49000' id='67' type-v2='layout-basic' w='82400' x='800' y='1000'>
                  <zone h='49000' id='64' param='horz' type-v2='layout-flow' w='82400' x='800' y='1000'>
                    <zone h='49000' id='62' type-v2='layout-basic' w='82400' x='800' y='1000'>
                      <zone h='49000' id='39' name='Malnutrition Map' w='82400' x='800' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='49000' id='70' param='vert' type-v2='layout-flow' w='82400' x='800' y='50000'>
                <zone h='49000' id='71' name='Malnutrition' w='82400' x='800' y='50000'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='73' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8625' id='75' name='Malnutrition' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='76' mode='dropdown' name='Malnutrition' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]' type-v2='filter' w='16000' x='83200' y='9625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='77' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='16125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='78' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='22625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='124' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='123' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='39' is-fixed='true' name='Malnutrition Map' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='77' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='16125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='78' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83200' y='22625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='75' name='Malnutrition' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='76' mode='dropdown' name='Malnutrition' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]' type-v2='filter' w='16000' x='83200' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='71' is-fixed='true' name='Malnutrition' w='82400' x='800' y='50000'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9DE7EC2A-CA1B-4459-8D55-8A434BA74D49}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Multi Meas Dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Location Scale' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Continent&quot;'>
          <calculation class='tableau' formula='&quot;Continent&quot;' />
          <members>
            <member value='&quot;Continent&quot;' />
            <member value='&quot;Sub-Region&quot;' />
            <member value='&quot;Country&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='3' param='vert' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='49000' id='5' name='Multi Meas Map' w='82400' x='800' y='1000'>
                <layout-cache minheight='284' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='33250' id='8' name='Multi Meas Map' pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='34250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='10' param='vert' type-v2='layout-flow' w='98400' x='800' y='50000'>
            <zone h='49000' id='11' name='Multi Measure' w='98400' x='800' y='50000'>
              <layout-cache minheight='224' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='71' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='70' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Multi Meas Map' w='82400' x='800' y='1000'>
                  <layout-cache minheight='284' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='33250' id='8' name='Multi Meas Map' pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83200' y='34250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Multi Measure' w='98400' x='800' y='50000'>
                  <layout-cache minheight='224' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DD059C4B-973A-4389-97EE-B0ADEE2964F4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Malnutrition'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]' show-all='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Malnutrition Type (copy)_1206964721532010498]</field>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1326873061413584900:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1326873061413584900:qk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF6D2ACD-CA7A-4391-8FE1-032BE3AFF508}' />
    </window>
    <window class='worksheet' name='Malnutrition Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B69AADC6-9650-44A3-AE71-5823DD615E01}' />
    </window>
    <window class='dashboard' maximized='true' name='Malnutrition Dash'>
      <viewpoints>
        <viewpoint name='Malnutrition'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Malnutrition Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{126485D7-E621-4BBF-A241-6F893B11D3A5}' />
    </window>
    <window class='worksheet' name='Maln Change Trial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]' show-all='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Malnutrition Type (copy)_1271422491595653120]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Malnutrition Type (copy)_1206964721532010498]</field>
            <field>[Parameters].[Malnutrition Type (copy)_1271422491595653120]</field>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Age Range:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1326873061413584900:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1326873061413584900:qk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Year:qk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93E5BBEC-F241-4793-BBA7-89A3405DB81B}' />
    </window>
    <window class='worksheet' name='Mal Change Trial Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05B5634F-FDBD-4BB1-9EAF-0B255DA39E6A}' />
    </window>
    <window class='dashboard' name='Mal Change Trial Dash'>
      <viewpoints>
        <viewpoint name='Mal Change Trial Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[usr:Malnutrition Type (copy)_1206964721532067843:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Maln Change Trial'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E5D0B08F-41C8-4C93-95D6-4A4D0FA16182}' />
    </window>
    <window class='worksheet' name='Multi Measure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46C84909-535B-4C73-A3BC-3557AB92FDC6}' />
    </window>
    <window class='worksheet' name='Multi Meas Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A7AED38-61FF-49A6-94F2-B646843DE80C}' />
    </window>
    <window class='dashboard' name='Multi Meas Dash'>
      <viewpoints>
        <viewpoint name='Multi Meas Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Multi Measure'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FAC640E3-B2FB-4F73-B52A-EEF457AAA44E}' />
    </window>
    <window class='worksheet' name='Malnutrition by Wealth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Continent (copy)_1523061120456728576]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1469862350293041159:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country (wealth_quint_df_final.csv):nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country (wealth_reshape_quint.csv):nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Overweight prevalence  _Mean:qk]</field>
            <field><![CDATA[[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Overweight prevalence in children aged < 5 years (%)Q2_Mean:qk]]]></field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Wealth Quintile:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Year (wealth_quint_df_final.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32D7AAB4-301D-4A27-BAB7-3415F6D53B59}' />
    </window>
    <window class='worksheet' name='Malnutrition by Wealth Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Location Scale (copy)_1469862350291353605]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Country (wealth reshape quint.csv) (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Sub-Region (group)]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[Wealth Sub-Region (copy)_1469862350290366467]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1206964721544204292:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1469862350291607558:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Calculation_1469862350293041159:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country (wealth_reshape_quint.csv):nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[none:Country:nk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[tyr:Year (wealth_quint_df_final.csv):qk]</field>
            <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEAB0695-CF6D-4EF3-B31D-8C8A11D76A59}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Malnutrition by Wealth'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Malnutrition by Wealth Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dw3dx91p5fjmx16u1m940hnahsx].[sum:Overweight prevalence  _Mean:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AE8D0A30-DC0C-4014-8206-C4C539193F83}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Mal Change Trial Dash' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Mal Change Trial Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Maln Change Trial' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Malnutrition' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Malnutrition Dash' width='192'>
      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
      ND+3MFGrquptOo6Pj1Mulxeooo7jNKh5DdfaShthfizLYnZ2dtE0K36zqP81/2//bq/fdKpp
      Gm2+ncmNQgS212o1b4S/+/kZ7PxdXFdCtsuMT+VJ7HqOZ06+1BCtJzpFOBxmaGiIj3/6N/X9
      i7kpUl29XL9yiZgmU9YtYiGVaFs3X/3Wr3h6taZpjI2NkUwmqVQq/OjspxRSCbLzJY4NDFAs
      l2lLp7n80z8iS4WeV/8xOwb2Llrn8KC+HxaV1qDDq6qXjkbXdebm5ujs7GxIJiaiB7PZ7IJr
      bckZAB54qoqwwGZEJbbq7LAwask/cj1KapK1RFEUxu/ewBo+TUWKo+mzDOZsZLX+bKbtYGgV
      bLPo7YQLhJXHdV127drFrv/qvwEeJCmYvnuDVEjGdaEzGcaozDA1OUFPb59n7s1kMt4u60uD
      BxiZnOSZF1/yOt/o8G1eT93jdkFl7Ke/z/zhX2Tv8de9jThYvmfnYjNHMplsEGox+guPXOEJ
      utiMvaV2gptJpVJ1y0e5QrlUXvC+v2L9PkLNjeEfcVKplGcW3GhGb10iOvZz9iSrHIhOoZgl
      FJ8Zd2SmSlc6jFEtLXqN5o7l2f8lhXv5KsmwKj6IXqsucA0RI3oqmeTZw4e9zl+r1Zj9+R8S
      VR1MR+L5jhLa2GlP6ITFZjFXE6Dhc5ZleWqcv8z+AU74/lerVW92ExFxi3ktb9kZQKCqKufe
      /oT5wjzZjhyZ7hy1Sg3Jcjl08qmGivE7y7VqlHQ6ve6mzsWo1WoY139Kbwosx+XT2/P0tzVa
      pHZ3xjl/t4DbGWV2drZhh3tubg5ZlpkaHcIxqqS7dlGYGEKJZbh69ToV3WT/yS+gz89SG79F
      SJH4/O03yOZ+k/T9kV8ghEB4hk6O32P6/I94NlX3GLWc+5FrDl72uYfRPBv7Zwr/znytVvPc
      T8R1FUUhEoksaz9mywsAwLEvHOfa2SsYpRrGxbw37Z2rfUpbXwe5zjavUYVnoeM43rQpcuxs
      pszZpWKRqGJxY9ygYtgc35UirLVI5yKr9B88AeCpLsK9wbZtyvcucSQxQ/HKB+yOqtwb1Zm9
      kSfX0cGxE88TjUa5fuUi1977W5RInGq1Qlt7O5ZlNXS4malJHMfGNg3US9/hmDIKEszqCn2J
      +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
    </thumbnail>
    <thumbnail height='192' name='Malnutrition Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29V5BcaXYm9v3Xpa805YGC96bR3ehpN9PdY3qGM9MzQw6HRjQrSpQUpCit
      NmL1oCc+SC96khSxsVq55SoY0opc7sySQ3IMh+N7etqjG90AGg0PFAqmTFb6vP7+esg6f/15
      82ZWloGpQn4RCAA3r7/n/MefwyzL4rFYDAMM8ChCedA3MMD9xc3pmcjtZqMK23FQrtbbttfL
      83jr3fdgu77YtnB3BqYb3NP7vF/QHvQNDHB/MXNzBumYj1NnriCRTGBsfBzvvvYTJNIZTB14
      DK5ZQaNmIqbHYHo+Hju8HfWGjQvnTiOeGsLbv/g5tu3dC/jncbfq4/d+/UsP+pHWhQEDPGrw
      TdyeXRT/dcwqcsMTKIyMwlAZ3KXtqhbH9uEEtFgSWmCh4SgAr6AwOgEjloKmACemRh/MM2wg
      2MAGGOBRxsAGGOCRxoABHmEszN7CzJ25tm2ObcPzHNiO17G/59rwt4btKzCwAR5hmI6P7ZMj
      OP/RWcR0HRXTBfNcFEZGgMBFqdZErbSATG4cjFsAAmRGd2PPtuEHfesbhgEDPMJggYuZO/Ot
      f6sadu4ch1WtwQeDohnYuSOLm1Awks8hmTLQaDbgswd80xuMgRE8wCMNrVQqgTGGZrOJZDKJ
      RCIBmSFs24Zt2zAMA47jIBaLwbIsBEFLGeScAwAURUE8Hofv+9B1HaZpAgCCIEAymYRhGGCM
      iW3NZlMcT3+iYBgGXNcVv6uqCk3TEI/HxT6cc9RqNXDOoeu6+M00TXieB8YYVFVFKpXqOL/j
      OOJeGWPIZDLiPuX7C4IApmkiCIK23+V/AxD3Ft7eD3zfh2maMAwDhmGgXq93fS90T6qqrvo6
      vaAoCpLJ5Jru/0HDsixYlgWg9V2CIIDneTAMA0EQiHfmOI6gEU0mSkVRYFkWNE1DIpGA67ri
      hMQEMvHThYDWB7EsC4wxeJ7X9ptlWbBtG4lEAqlUCowxJBIJAK2PTkwYBn0M3/fhOI5gBNd1
      kU6nxTGVSgWMMTDGYBgGEokEHMeB7/tiezweh6qqME2z7VhVVeE4TtszZLNZMMbg+8vRzyAI
      EAQBbNtue/YwM2QyGSiKsmYCSiaT4l4MwwAAuK7bsR8xoqJsnB9DVVVx/5sJtMjpui6+j2VZ
      WFhYwNDQEDStpekzxsSCRv8WNoC8CtfrdTSbTbHa0gVc120j/jDkk9MFFEUR25rNJizLgq7r
      4gPLKzlBVVUkEgmoqgrbthEEAVKpVNs9yudPpVJCAhCjkTRwHAeMMfG3bdvimDCI6OVnIGJw
      XRexWAyMMbEo0P3QPpqmrYv46Zye54lnDzPZvYKmaUin05uO+B3HQbVaFYsFwXVdsZAVi0Wo
      qgpFUeB5HoaGhgQdad3UD1p1NU3rWA1lyMRO5yECIsjnp1WUJIWu6+KGVFUV6opt26hWq1AU
      BbFYDL7vt6lRMnRdRyqVEuqXoijQdR31enteC0km+htoqUnyOROJhPg/PRdjDLFYTKy6sVis
      TRLI5282m0LarAWu66JWq4n32ov4V8sYdD56Ds45EokEdF0Xq+RmA9ENLXClUgmKosA0TYyN
      jaHRaEBVVWSzWXDO4fs+VFUV6lBXBugX3T6CzAxhPZ9efiqVgqIokcSiaZpQf+r1OhRFQSaT
      EVJJhud5qNfrYIxB0zShS5MKRPsQ4SeTSaHSyMxAUims1nDOUa1W4XkeUqmUkGCkmsjvz7Zt
      8WxrtQNI4pIEWukd9wsieFoodF3flLo+AKHLk7rebDaxuLgIxhiy2SwymQwAIJVKIQgCVKtV
      ZLPZNgmnqmqLAWQ9XibS8LYohFUeeTv9TfaF/LuiKIII6VjbtuE4DhKJhDC6ST8PggCVSgWK
      oghR7bqueKBkMgnbtuH7PprNJlzX7dCR5XsCWqt/+Nls2xZ6uMw8svrnui4SiYRgHln1A1pi
      OQgC6LqOWCzWt1pB7yD8HjeKSA3DEGrcZgc5XUijKJfLSKVS0DStQ02XF5EwfWtEfGQlE1by
      zkQhzAS0jewHwzDEByVPEHmDZJCVrmlah6pB3Bw+P91rPB6Hruttq2j4fhqNBoaGhtrul/4m
      FUYmWlklMgxD/KaqaofBTyCJ4/v+qqRBmKl8349koNV6gBhja5ZKDzPoPXueJzSDbio9MYb8
      3bVehO77vjAKNU2LfOFhqzoK5IayLAuqqgoVgm4mfFNAy4oPGzZhREmpRqPRpj/LK6js8apW
      q5F2TZTKoaoqCoVCG0PJbshejgHXdWGappAqK0GWiKTSdWOAXtcNYzOrO90QBAEajUabI6Lb
      O4laCIMgaEmAbsYWESCtRADEBw8TexTxk2dB07Q2Hzp5guRrR934Sh+4l4+8F+TryYxHxlLU
      ywob9Y1GQ3gUfN9vU13Cto5t23BdF8lkErqu97y3eDwu3MkbCXI7bxVQ7MfzPJimKRYuem+u
      6woaI82A4lgytPBKLCNKRQgTpfy7oijCAxOLxRCLxYSFTqoAHW/btvAwdfvYsoEq31PU9bv9
      1kv/Ju9To9EQ97uSvk6xAgqecc4FYddqNSElyQahfUiSrgTZXlqPg0J2ExuGsWqvlOd5wpUc
      9RvZOA9KqpARTN9PVVVcunRJEDhJyHg8LlztQ0NDbedQFKUVB6CXTIYpQWYOemiZg8JGM2Ot
      gJPnebAsC67rIpPJiMhmEARYXGwVY8gRXvK89POxw0Z32GMjQ1Z5wvtRTCCdTgsfcT/GKr1w
      el++76NSqQgCJyPdNM02qRCPx1dU6cL3t1bIujA932pA6qpt28jlcoKYSAsgiZZOp/tW7TYa
      FCUvl8vCXty5c6ewN+mb0zsnz2BYEnY4f7sRYjweb4tIRq1OnHNh1KqqKlZYElNkodNxuq4L
      Tl5JNYhCv0RC+1GKAvn+DcNAtVoVgbN+GICCaBRjkNUVihEw1op0kwEfTt3odZ/JZLLNyF9N
      YIrugxaXtQa2KKWAiL7ZbAojUl7wKGugX8beKMjSUVGUDqKmRZoWSPIOER3Ki7wGtBuTANpc
      lrJ+LHseojxHMsjHXyqVkEwmOy5M16SgBKkMvQJe4WP7hayLU14SGfXkqelFoJSGQd4lOUKr
      63rbwlCv15HP5wUTNJtN8S76ga7rSCQSaDQabakcYXc1gI54iK7rSKfTANAXw3VDLBYT916p
      VNroQrbZPM9DrVbD8PD9TY+mRRPobQdS3ENOfVEUBbVaTeynyTvLkA8Ib5c/SJSuSuoFEXW1
      Wu2prsj+erIZejFB+FpRqljUc3HOxcpNxE8qjW3bGBoa6nhectfS6iFfV1VVpNNpVCqVNuam
      xEKKCK92FTcMQ+Q39atnh5MY1wvbtsX7AdBhZBLudwTZ930hISkQFgV59ad7Jq+mDCXqoPA2
      +lv25gDLhBt2HdJqa5omLMsSFw3r71HcSwQg+3dpBZbPQ3+ijPJekomuQakNsr+9XC53JJ7R
      +ei+5Eg0uVPDaiMFZtZqKCqKAk3TRP5TP4gK6q0VlH5Cz0kMLD8HfXeSOPcLclJks9nsyvRR
      dGxZVkfcqYN9ZIMx6oUqiiISzrrtI28Pr37hmIHMFPLNy4ax7IEiy1+WEOF7kI15+bykblGi
      XdTxZKvIKhrZMrSdpILM3FEvXE67XQ3ImRCVb9QNcoBuvaBnIbssHMkn9Y68fPcLlCdFRjqp
      zt0cM3IMhVJqwlCA6I8nn0heaVVVFWnFhCg/+UqMsdKqGLWSq6ral0svypMFAOl0GoVCQaQx
      WJYlVrJEIoGhoSG4rotisdgmKil4J6uF6XRaGLzy9jAzrWVVJtelrBquhLCna72gbyirELQI
      pFIpJJPJ+0b8RAtEwOSRzGazXQ1wRVEwNDQkVOpSqRTptGlzg0ZdWPaOhN2icrJZ+Jgo0IpO
      K8pqvTiy5EgmkyJHpxtkBqYkNoKqqsjlcsJ3T1mghUIBnue1pUHT/mFiTKfTbS+WVkR5pYlS
      K/uBnMPeD9Zj9EaB1ET6Q/bAWot91gPTNGGappDalmVFpnUQ7em6jlwuB03T4DgOarUaKpWK
      OEYOkvVlwcirixxgCasv5BcnyMeEDecw6Jykpsi5PGFVRVVVxGIx4QnohW4+ddome2gouU5m
      FE3TerpIyVtCOmkqlUI6nRbpuWtVS+RnXIngSELdK2ia9sDSpRuNhsjsJadKrwVW0zQUCgXh
      taSUF9M02xIayYslkuGixFlYpIfVEcrnl4ksSr+PcuFRxZnsX85kMuJBw5FT+bykz3WrUZCh
      63pkeoP8HEDLfWlZFnK5XMdLld2R8jPIujAZWI1GA+l0Gul0WgTC1rJikgdD9sQQZLdx2M23
      VUALCqmRUe7gKMiBP1pIASCfz4vEQnqnqqpCI7ES9tHLHznKe0OihC4WdUwvNJtN5HK5tjpY
      Oa+/1/FhSdNrv36JQ9f1NvvCtm0hjSqVCgAIvZxStkltotJN0jcpNL9etySl/DabzbZnoMAh
      vYeHuYqLXNqrAbmmydANu7W7fU+KoRBIzSbbhaQYSUtd11sSQNbHZX0/7F+n7QSKDlNEl/aL
      8vmHbQMitEQiITweFKCIWvGiXtJKSCaTfYvuKGIlBqD7pzx/xpggSlknJn1ZrhtYr2piGEab
      MS0T/2bAWqLEVCe+sLCAdDoNz/OElKW/VVXtsHui3gmVxUaBcw6FRAHp32F1Jsxt5DUh9UjT
      NBE2J1VGJvgwIwHLWaKxWAyct4JTK3VAiPJMddPvgeW64rWCPDxymm3YtSp7wmTI72i9UFUV
      yWRSMGA4rnC/0xDuB+i9U4cOWsQMwxDBrCgXcdRi081TRYuXJm+QayXl7UBn4pv8b4oN0AeX
      P0qUKgUsR1jlzhPyNbvp/6SuyatzlMq0UjpFv5ALKeT3Qc9WqVRErk9Y2myUm5CMYVVV22wj
      8tRsNVAAUU5nlr+BnGcVPi6MXqt/qVSCRkRL/XEo0hlWebr570mC0McmH22vuIDrum0JX1E3
      1y+67btRbkGKypI7NPz8VMNL9cuyOkk20nolAWNM1LiSP5xctZtFFQojSpoRomhMhtx3SgbR
      L0lMzjlisVibCkkShfK6NFJDMpmMWNHIGxNWZXrdlHzzZEDSfuT3l/ehh7RtG/F4vO06UR9V
      lh5U2d9rhd8orwhjnQlvctUWgQrNZZTLZRQKhQ27DwAi/0hOyd6MkBfZMCjgSZ6u8LtuNpuR
      6g7nrSIZWrTkZmiu64ragDbjmHL1aQUjL0cqlcLi4iKCIEChUIh0bcpcJXuS5NpfurisHtDx
      9XodQ0NDmJ2dFSqLaZri4WKxmFj5ZMgrbbdUi410C8qFOeGOeN3AeSsfip5xI++HGlhtZqzE
      uJTvE5XXRZV4YdVYtl1lBiFbguwosl2bzeZyOjRxzPDwMObn50WVPWOtInJKzOoW3KIVX77h
      Xi4ruaEV+dKpjR0dT7kc4Tx0GWHpRPe1UQQnd6YIQ34Hcg8lOo6xVtSyn1LI1WKz+v3DamI3
      pNPptrRloLUglstlcN6K9mYyGdEKhWiA3NkEog/qMyU7MkqlUnskmIyq8fFx0ZyJjK5GoxFZ
      /SOX78lMQOfrBmIOYjLGWsUgZFAT5NU36nxRqhnnrT4+uq6vu88lebiimEr2S5OeScGrWq0G
      XddF54tsNrvme9gKINsQWHn1j3K8UIQ9mUxiYWFBtL+UiT+dTiORSHScnxolyEZyPB7H2NhY
      dCoEdWujzEgAoggkSvTLnhnyzoRX5rD0iIovUPpzOPe8m13QDbQiUzbmerwx6XRadMnrdT3q
      UED1z2T3kAEdtoMeFVADhFqt1taucCXIpbXxeFwENHVdh6qqaDQaHd65qMWO6I6q/oh5RN+o
      bjdAhEwBn0KhIDhJvqj8t1wXG4a8b1hNWinoFj4f9f7pBvlcq0kpjoKiKMhmsz2ZSL5/OVgG
      LKuEUdmIWx1EC5TaQpV4/TQIIM/XyMiIIH4iZrJX5e9MNEJMI4Mi/ET0xWIRc3NzWFxc7M4A
      jDFR7EBhZFnkd9O1VypG6ZcIyMANn5/slX5UI85bOTMUa1hNHx0Z4QQ5+Rq9njfsueonfWOr
      QVEUsVo7joNisYhyudz38fT+PM8TrvOoACctUL7vtzUFqNVqKJVKojFbPB7H8PCw6BDRM09A
      1tGbzSbS6TSKxSJGRkbEBfp9APn//XhQotQkAiUzhSVF1HkolRZYJuRwj8h+0K0pWLfrhuMn
      QEsduN8VVA8StFhROgdhtcE727bbmg9Qzo98TnrP4eIY0gCoQo9AqumKDJBMJoUuTTpcqVQS
      lfYyogiWPESkUsn79bquzACyESr3818tqIKLMbaiLko9JynXJ8yQYSbt9hyyhHgUbYCwJ5AC
      VatxTDiOI2xDubszsJzwFpX06HmeqK0GILpc5HK5Vgdyy165HoDqQ8lIpaKPWq0mfNFRgTL5
      Bcg3u9LKHXUuWdWSI82rfYnkpqQsQ3K/djsP/eb7vmjBR/fTD+hZyQCu1+sbkiW62SCrrRTJ
      Dk/i6QU5cZIxhnq9LhbhfD7fNeGR7DcZnHMsLi6icu0GhouV/ofkUYAskUisSs8PqwMrrZwy
      t9J+UcGufj1DZAfIkWmgffQTRQtJUskBtiAIOsSn/BxR1yPJAUCE3Mk3TeneW7FXpwzOeVsv
      WGpHQtvDqcu9QN+CjFvP8zA2NtaWghP1Ln3fR61W6yjfNJtNTM6XsC2V6Y8BGGsVqQ8NDYkP
      GrbMw75b+YY4X+4tGib+cLll+GFoBZWZYTWEEw68hFfxcKBrdHRUvCwqcAkbr+Hno9wSy7KE
      b5rKNRljItUDaH28UqkkUqcfRInh/YDjOLh+/bqowY7FYkgmk8IpQakJ/Tw7LULj4+PCGRF1
      LL1zebxXMplEuVwWvYsC34fy4Xlsy7QKn1YlAeQei3KrvPB+YX05zAwEOa2a9onK8YmyB/rR
      wUlSUTfqbqt2+FoEucVe+N7lc1EaBxE+BfTS6bSYVBO+T1rNNrqW90GDJCDNalhYWMD4+Dgy
      mQx0XUej0WjLAA7364xCIpFANpsVdeiapqFarYp2kzSZh87p+z7m5+fbatYbjQZ0XceZN97E
      SX1ZBV1Voefi4qLoGibr4d28HrQ9CALhRiXIbk659DJMcFEES4RGoOir7POnmk9SPfq1GeSA
      FWUShuMd4WclUS9XHdH1ogKI1KmYvBg0+WargKTm2NgYOOeiUx4FpOidUtCw17PLWbie54lz
      U8yFimTk7AOqzSZwznH+1HuYnC3ik3ochqaLYOWqGEAuAaQGsOFJigSZ2Cizj8SXHDgKE5es
      f0dBbtRKhE9MSYlOYeJfDYix5J4yvaQNbafnIxUR6CyYoeNlpqKC+nw+v+p7fVgRj8dFtiqp
      sKqqivoPYPmdkl0ZRrPZhG3bonO3rEISyJ4gCVwqlYR2Ijf1sm0b+clJjJZNxEJFX6tWgUjM
      kBSgSLFMJGEdnmwIuT40ytuzEmOE1So6L/nXqfyNoo7yiw4jLKkItGLTii432ZLvR5YCtI1U
      JtM0hYeMupfJq1xYEm4lG6CXWir75emZqYu27JYm24vyubqdV+4USL2qXNcVbR2z2Syq1Sry
      +Tw8swmO9niOqqqrkwBUpE3GKK3AcuuOsI4vEw/l1ZNOHvXxZeKWX1T4nMTZVCNKad3hewkz
      lOw9imJWMpxk41t+rqiPG/b100JBojlcTikzv5wasBUYQe6hqmmaaLEoq6jy9w1H5+Wub+Qt
      oqIjeWUPq06cc0xOTgppQ3SWy+XAOUfpg7MwVAU3qmXk4glkjZYdsOpmL+HCFgqUhV2H8oPK
      xEGrtCzW6AFkdNP9AXSUBuq6jnK53LUdON1HVCpElBQqlUooFAodKl7UcVH2AUkPEu/htoK0
      L23fSoYwaQpyszGgRRNyr35geQGimAC5LWnAdbPZFBNCc7mcCIjR3AJarGT6CpflEpM4hRwu
      x2IY2fUU7pbLuHhzBmqlDmZZFl9PYIZcVPLERtLDw2oOGb2kw1MNgkycxNnd7ABZd6SHo5Wf
      3F+9KoZ6/V9mVoo49+rQJge6ogz3KGlBz5XJZIRBaNu2MBS3KjhfHislu53JnqSWONRZe2Zm
      Btu3bxdR3yip3Ww2BbOsVHREqRS08AoJvN4HI3cXEF3sEHVTtPLJBtBKLk35fBRXIM8SPRhZ
      9t1eRJQ90U0KhbMNuz1L1LFAu65JTEL7pFIpMdj7XlSMPYwwTROO4yCdTotufPIiV6/X2/ah
      mhSK5Mrv13VdNBoNKIqCqakpeJ4nJg9ls9nIyHBYYtO/180A8Xhc9GyXVZyoC3eTBmE3WD+M
      IDOa4zjCNlgp45PUjXDKbBTCL0029KMMddonl8sJEUzvgqSsvC+tSnL3t63ICJxzEQiTt5Ha
      Q8VEmUwGmqbh9u3bbYGu8DshW4BcnVQdxlhrFkUqlWpLN6EOfVQTsCYvUDcwxgRH0yCMVCqF
      ZrPZ1ico/OCy+hAVqZWJLMpQDuvV8nVoVY1So2TboR9Gk/eLSsmg69PvsVhMNApjjInaUzl6
      TsdSija5B6kXzlaKCQDLCZEyqGKOZskBy4yybds2VCoVmKaJer3ekehmGAbq9XpbsZOs89dq
      NRGzYqwVixkfHxf30iYF1msDEEgtKRaLYKxVdBB+aGIIIg4Sg2GvT3gVlw2pcLc2+Xe5VQg1
      1w0Pp6NOAeRtkF9++Jo0fDnMiGEJAECsSDQXmJ6xUCi0Gfx036ZpdrSGYYwhl8ttyWQ5zpcr
      /oiA+ylWosUjnDzHOcfMzIz4vhSLoaGMZHMYhoFGo4FcLicYsU2N3qgHpNWO2oOPjY2Jyn6Z
      cOQUivAgCrm+OAryNPBwCgWw3GtG1t8bjYaoZCODiybFU5G17JWQXzA9V/g3GXQPhmGgXC63
      MZ5coB2WYlEfn4hkKzIAANHQWM6s7YUgCARRh99frVbDxMRE2wJVKpWQSCRQqVTguq6Y98B5
      a5oktVO0LAuXfvFL7NTjG8cAhEwmIzgdWPa7h1f48CpPzNEvogJRUaoS6YlUVE2g+t18Po/F
      xcWOmcTdvD4AOhiV3LC2bbf1re9Wtsk5F1Fjsl2olxK9uwfVjvxegTEmCJLcy6QGERFTbyWS
      nmQf0EQiSjmheI08QopUHpr6SSqw7/uIxWJIp9NwXVcEyHZ/4iQmzl3eeAaguk/ZsIsKOIWH
      4ckE1csFGvXvqKCKfM5UKiUMIMrJz2QyCIIAxWKx7ZiwPRG+VtR1aKwoJXtlMpm2vjZyIyby
      XsnMKDfVCtddbyVQ+rKqqkLHl9vHyIEukpzj4+NgjLV1d+OcY3R0VLwn13XhOE7btEp63zT8
      kDHWxmwjExO4NnNn4xmAiJtSCmhbeB/aL8oLROgWbAp7lGTGCWeLUmqCnKpMkUIi5FKpJDoP
      yJILgOh5GpZishFOMwEYYyK3B1hu1QcsNxkwTbOjGk2umNuonqYPMyhCPDo6CqC9ZoMWLVpU
      AGB+fl5IRyrHpVQJcidTKgTFgu7euYNsLteWih6mmyDbZz3AakAXIDWHRBn9TfuQodLNDRpl
      cHbrJiD3N6XoIx0n3w/ZBxSJJt0ymUyK4BmlQZCBSqu23K5FLmYJpzHIAcEgCFCpVEQXA7kw
      JwpbnfAJpJratt3mLaPvRu1kOG+1Mclms3BdVwwvURRFjLIiGhodHRVzje+8fQpPG0mcySxi
      98knuhZw+b638QwALIe9w4OeSX8j3zgRJDFBP378KL06LFHk6K1sXAPLxnY6nYZhGG0Zh1RM
      wTlHMplsmylMU+5p+AUxl2mabaKXPiTpu47jtFrwLXmJtmoBzGohf+twu0l50SOvDhnP1GZl
      YmICk5OT4Jzj6pWrmHn9LSAIgEQcc5YJNZbGrmIV01euYmrP7g6voaIo2HPo0L1jgKjucOTl
      CGfk0Upg23Zk1wRSbcLdIMII2xl0Tbl2QV7BKddE9r7IvefDKletVhMjU+m8RPCK0pqvMDEx
      Iewb0zSRTCZFdHJA+MuQo/ZhGgkTKv2bc475+XmMj49jbm4O+/fvh+/7GB0dQePsx9ibzABN
      D77lQskxFGJxFC9exYW7szjyqec73O2apt07BogSOXTRsF+dVsVerjGZoFdDSLFYDLZtt0kF
      8sLI+rphGNB1vc03r6pqWzsOmjMldyZQlNZIU3lkEtCyHZLJ5KqKv7cSSHWM6vIHRCdMygwR
      BAGSySQqlYpYVJrNpnBepNNpoVWMjI6idGAPqldvYSgWQz4Wx0y1gu2ZIRxIDaHIvbY+o3Kl
      2IYzgDzRnR5YfgHEHHJri5UIRLYBolQkisCSnt3NxUqrsBiRufR/8kLU63VRA8AYQ6VSwcjI
      CBRFEbXD5PMnxtA0DdlstkM1I331UST+IAhQq9WEZAfQ9q5VVcXt27dFmSSw7BrO5XLCcaEo
      ivACAa0aFFKDKHkuk8kgFovh0FMn8bHng03fxXStgtFECovcx+F0FkONBhKJRJtrmfNWasQ9
      M4KB7h9fTpGIMli7nZPcWFG/U0tCKlAP/95sNtsGyoXjE0ArUENeBuoYIRf80DPJDEWqTxiP
      IuHLIDcwIZwdTK02qfKL8nnofcrfkL5fMpkUgUxycVIajq7rOPzs03jH+QW2mw2cLxfx2Ne/
      htd+/hoSIwWMS7UpRHdtI5I2CuSuklUVuc42TOxyYcNKUVBZfJKbLBaLiRpQRVEwPz/f6vob
      mkcQj8eFJ4ix1oTLer0uJAa9dApCUT5/eBg41SKQwR1+vgFaEpmK1EmVocVL7h9LagywvCJ3
      A7mnqcVJpVIRqfhUEmsYBj75uc/hzKn38PzHV3H6uz/AY/lhVKpNWKaJ+JKKOjc7i7Ov/xhj
      u/bfGwYgdYReRq/IJhE9MUW3/JCwCkQdv4igq9WqSEMAOoNX1N2OfltYWBCpCnJ/IN/3hXoj
      D/qg85JozuVyUBQFiURiyyWvbQTy+bxIZms2m8KRIdeGJ5NJMVuNpoV2k5wyc2soiVgAACAA
      SURBVMRiMeTzeViWJaLKxECqqmLXgf2onb+McSMOVdVQVQIwy4K7RB9zs3fBq3O4+WFx4xlA
      zvUhY6YX5LQCWv1lO4EgE6Hv+9ixY0ekp4lSCWRDnCKtURFpGZQ2S9HaKA8FvXySEo+6qtMN
      sqRPJpMi7SEWiwnHAdBaMFcqBqLhFiMjI2I/SiXRNA21Wk0wQiKRQHlxEXk9hpsxG5WnjuPA
      UsCNunxfvXgec66OPcdObjwDkEEaHl7QDf34/sPwfR+XL19GIpFAKpVCo9FoM15JJBKi9P2w
      u03eTgws9xWi3yiKOVB5uoNsMipOz2Qybau7nCIiFwN1mx7T613Tqk8p8L7vY+fu3Xj3zEdI
      7j+KXD4v5qrRYnt3ZhrbYh7sy293b4++VpC+LfvdV2KCfhA2rnO5nJgWKFeYUYG87InSdV14
      JEhCkXQKgkAY0BSLoKxWYhKKHNOLHKz6vSG3gg93awaW/fsUYJQR9W455z3VI9muI6l88itf
      wo69e8X3o0VQURR8+otfhakkoLANqAiLAhmmdFEKDEX1wwwzh2w4d9OtGWNtg/uizkNVYvQb
      GWCUqCczDdkBlKtO9gYAkUtCAbtBJLc/dOvZ2ctL2O17U8ePbsxB30f2HCmK0jZIg5o567oO
      2zTheAFSKjZeAgAtny81eiJup5Yo3QhefiDa3ktyrKTPy+JWtgWI6Cktl9p20Kovqz/hafHU
      VnuA3qB32S0gCiwXw/ezmIRtMQCiQ3S1WhUZBOF9aMElhwbR1I5duzC573DrXtf4jCuCOJKS
      w8gFSWKKiEpOmyaEc0MIUUZ1N4aJevGapsE0TTEyJ7wv/U3TRMK2wXoH7j1KiMViGBoagqZp
      wrNH75e8aGH1p1arYmF+HoramlY6O325pb7oaSgL51C2VYzvPY7d+w6KZDpKQw/bCRRwo84b
      5G0CWnbDoceexPfOnd64ksgoWJaFarXaFjwClnv107Zw4CrKC0QPZVlWm2pDQ9PCDEB5//Kx
      dG56OQTZKJN7FoX9/8PDw2tqt/gog/PW8HUqRZVzcQBg9vY0KlfeQmBVkeEV5JMqAg6UGh4m
      si26OHWtgqf2ZFE2fTS3v4xdh050XKPbwkROjXDTZdd1ceHChXsnAQCI9t9yPg2w3CtU9rD0
      C/IyAe0em3AkmdxkBMba5x3TNjqOaoOps3N4n3B7wwH6A2MMty+8Ay2RxYHHnoZtt4KX5dIi
      7n7wQ4yyBewxAiANAMtu5cnc8kJjqC01Jh1TUKqXIq/R6/qUySsHLHVdx7Fjx+4tAzDGRBPd
      sEpCHQEIK+UFdQtwhRFWg0gHJKlDZXHEHHJwjbHlFiXkMZA7jQ1cn6uHZZpIls8jawa49L3X
      wQMfTTWHBK9jXyHabgtDVZcSGFUFpbmZnit+NxANkG1HEuGeF56Sx8ayLNFES87tIW8P6ffd
      8oJoJQ4n1pHLjR5MVrVknZOCJLLXAGgxAHl6oqa967qOQqHwSFRq3QvcOPcmdmcAVVGRjnEA
      Cjhv4OPbdQCtBsK93utM0cR4tuV5u2LmcezFX1vTfZB7Pox7vqRRukImk8Hw8LDwrJCrUVYr
      5NrZMBOEewzRb4ZhiMAXqURE8HQuORIcdX/0N6lmhEwmg7GxsQHxrwHFubu4+ItvYbv5IVQl
      3BSNwfH6m/NWtz2kYi0aGWYlvP6Db8J11zYkMQr3tfUAEdkHp07Ds1wEjOP4k491uDPDXaXD
      5wirS7JhSwEsij0Q5FU/zAiyZCHmSafTSKfTA71/DSgV5+B+9NfYG/fRWvE71du4rsL1Auha
      7zX40GQaH05XcWLnEHJxhudHK7h88SJ2790nbLNeGcJUhtot0e6+997QdR21K0XEmgoarolX
      L/wQuZ0jmDwwhbGxMbGf4zi4e/sOwIDtU1NtxNuty7MsPUjyAO35SXLRfPhYYHne16PQr/Ne
      Yf7aWeyJeQA63/O5mVaZqc85FKW/GMD+8RQu3GlgqhDHFXYAO8cn0Gw2ASzPXg57Mqnvqpxm
      QeWwtBADD4gBth/fjfm3biA+lcGREwdw6edncP3aOVxKnIUW18E54DoO0pYBTdFw5vIcnnj5
      6b565RBxkwSgWl8ycMmQJVUnakTPSjOEB+gOy7JgFM8CQ53uyYWag1xSxdRwsscZOpGKa/D8
      ADfMIex+5vmOBYzSrsP1IvK1qbX6xR/935gY0uDF8kB+3723AaJw7BOPwYp58E0Ph44dxtjh
      KcS1GIbcBJI1Dam6hpyThKYs9YhZ5Hj7e6/1lTQXzjeh5DjieCpdTCaTGBoaQjKZFGm6lMA1
      IP61Q1UV+EpnXGmx7uB2ycLI0NpiTqrC4CdGxf/lXDNqoFWtVlGr1dqG8MmwLRNTeQO7R2LY
      n2liv3fm/ksAoGW47nhiL6bfvIQP3/0A2w/swNyHNxFDdEyAMQajxnDjyjVs2zmF93/8NmLJ
      OB574cmOWl+yBXRdFz5/SngbGhpqq9GVE6WoUxnQOw9pgN6oVspIKRYAhnLTw81iywU+lNBw
      Ymf7RMio5snA8reU3c75dBz+7sdWXJxoBGsUAs6hINR39l5GgsOYnZ0VXXo557h49gLO/OAd
      5B6bwK2L05j082DokRfuO7DiPjJODApTEEzF8PgLJ9u8CZSuLE8JpOsB3V1unLe6xjWW6kfD
      E8YHWBnV8iIqH/wtJmN1TC+YUBRgqtC7ykuW6jLRk1tbxungBPYefmzN9+f7Pu68/m9xdHx5
      3b+vKhARP9CqrDLSMeiZGGpXividP/onYNvisP3uLq6YaiDrJqCw1m3bM1UU54uCuKlYJUz8
      QHRCVfh3ikdEJe0NsAw5yY1zjuL8LM6/81M03v/3mIy1jNym4/ckfmDZ4UDJc9SZQ24qLENl
      0Spwo9GAZVm4ffu2KJ7pVlkY/qwPLLSZTCZRmltEUHORsHV88Pp7+PxvfRnKRBxBn8SXQAwX
      fnFG/F/ONVkLKHuQVKYBohFuE1mqVNFAGrfSJ3FafRan1Wdx08rAD/qb+EMp872yeznnCJRo
      FZncnb7vo1QqiTFZ3UDB2CBY5ZzgjcbJZ5/C9h3b8cEb72H63csY3j6KL/z2K/jZt3+IYMYU
      K30v6CZw9dIV7D90YN3GK6lPVBo5wMpwXReFwjAKheG27W+ev4OP3rmN3zvSxOjQ+hMITSeA
      kY0eJkip99SUeKX8srbGbffTBugGzjl+9jc/QrlUwtf+k2/g7KkPcfO1S4ir/b04N/BQ4008
      9sVP4OjxY+u6F8/zUC6XRb+ZAbrD931UKhUAwOmzH+Mn710XvzV9DZ6aguFV8LVtt/D8nhiU
      dSxQiw0P5W1fwMj4tnXd7+1f/lscHVeXM4DXfLYNBGMMDbcJrcxx7co1PP7Mkzjw5RNo+ObK
      BwPQFQ0JFsPE5OS670XTtLYZX90a8g7QPrXdcjxUkRV/PLVlh9lI4K8+TuD/esNEuRntnekH
      hZQG8875jjkOawGpXZqmPRwMAACf/MKLKBybwNs//CXm5+Zw+OgRHPj8CTis9cBkeMnTX9qa
      LSVV5Av5DbkXOSEuqghnAAjf+8rgYPEhXFSO4396bwQfzFhrXlD2arew+M5f4s6Ny2s6PgoP
      zRiSQqGAT33p09B+ouPS6QsY++I4jj1+HMlEEue/ewoKX+4LROV2sp9YNdR12QCe5+HG9euw
      TRumY2F0dBQ7duwYpEB3AQ1BBIDZuQWcvToHoNPrw1QDbIngm9ow/vxGBp9YuIFvHAUSxupi
      LQlDxXDcwb97/RQyl4t44tAOTIyN4OMrN2D7HMf37ejZXCsKDw0DEE6++HTbirvn4F7MTt9B
      9cxsWz/RcKBKja9dX795fRo//+sfYWL3NkxfuY4xJY9L7ocIRjUMbxvFpz/7mS01zX298Dyv
      Ldj06nuXMNPsQniMIfBdoWow1cAp6wCuvnMXv3OghANj/X23IOD4xVUb378zCUfPA7cCnJ6+
      gDjew+ETx5Ed246ffXwLEzEXxw/s7rvQ6qFjgPCNV6tV7Dm+H+98dBuxoHsjKnuhgdJiqaca
      FAQBZm7OYPHuAvRUDEeOHgFjDDemb+D5X/s03nnzbTzz5RegqRrKt4ooXp9F5cNZ/LD4PXzu
      619EKt0ZX3gUMTMz05Yy4rk2gO6EzNCp8pTUCfwfF7N4aX4arxxSe2aF3i7Z+PcXkrgR7AbT
      lxe+QI2jiTisZh05xpAanUKVc/zow2lMpTiOHtjTsVBOLzTh2kv3wx8SL9BKsCwL3/8//xpp
      3l28BTzArpeP4PCJo5G/l0tl/Pj//S4Srg5d1VH2a/jyH38jch4BYXp6Gm/84DXEGgzc50jv
      zOP4Jx/H5PZta6pK2gqoVqv4X/7smyh6meWNigamdaehoDEPJTUa+RvnHI/rF/Afn9ShRmSH
      /vCigx/MbkegZyKObiGtNvD0S59u+x5B4MOau4G9eR0H9+0BsOwFOjaxvO6rf/qnf/rfP+wT
      Cefn5nH37E1orPd4oYWZOYwf3BaprszcuInahQXoqoaAc+RPbMPeA3t76vjZbBaHHz+Ca3en
      oSoqPMvF3ZnbGN0xjnfffAee7+HO9C1wtv4g3GZBLBbD9tEs3r64AKYnWjq+0pt+fKsKJRZN
      wIwx3PUKOHW9Bt81sTtP1YEc3zzL8bPyXnCtt15vmya2bR+DZiwzIWMK9HQeFSRx6fJVMLeJ
      hevnkOOLyCWX6ejhpvwlTG6bxN6XjuDya+eR5N1jA4ar4swbp/HJL77URtiNRgOX3zoPTWk9
      uO07mJoY7ivhTdM0fOUbX2vbFgQB6pUa3nz9pxhO5HE5OAtvQsPnv/Yrj0QOUbVhAj0Wo070
      9vowRcGisRuv3rkDg9/FTDOJ640UZtl2oI+aAYXbiCWjJbmq6VAn9uGq2cDjjfPYPdaeir0p
      GAAAjj11Ajv27cKr/+HH8Es2EmoscsVtfFzE3176K0w9sRdWtYny7SLqjToKyABMQdWu45p5
      Cy/v+VrEVTrheZ7oHq3rOhYWFvDdb/0duAJUgyrSahrGcAKFQg6nXnsHn33lZTHzl9yp/UQn
      NxMO7t0N4yfn4aC/vH5F7WxMHIWKPolvziTAYukVpYqMflR4zYhHul83DQMAwFAui6/+599A
      caGI82+dQeXjORhqO2EpTEE6iKP83m0AQBwqWJDApdJ1pI0Umq6JJ5452bdXR1VVJJPLH3pk
      ZAR/8Md/CMYY6vU65u/MYc+BvW3H0AehD76ViB9o6decM/RI3G0D57zlCu1XRVxlnMBYhw27
      KZ3cwyPDeOErn8GJ33oexp4h2PHe0VqNqRiKpTGZGUVci2F8clz0+pSb6EZBLryQtwFAOp3u
      IH75mK2K69MzMGtF+LVZBE5j5QOYAgT9RYG577T27xM88FHIr34OG6VibyoJEMaOnTuwY+cO
      2LaN86fPYfHmPBzTxvbjuwEO3Hr/KlDxcLN6V+j/FnNw6+YtzM/MQlNUuKaD+FASx557HLl8
      7sE+0CbB+Wuz0LJTAIDAqsBvzENJFMBdEwAHfAdt4iHwwF2rp6cIWKrZ4AFYnwzAOcdEFthz
      7PGe+3mODXP6NGKx9g4kvu9vDjfoWhEEAX7y3R+hdn4eaSMJ1/cwU72LPfkpsU/TNVGxaqg6
      dfz+f/uficzCRxW9ujcDwLnzF/Cvv/8RAmXZGcE9G35lBmp2ClD1FQmY+y6C5iI4OAKrBi09
      uuRR0le1+g9pDTz14qd7rv6cc3jX3sSvjd+ITMbblCpQv1AUBS9/9Qs48qUnwccN3LLmkDaS
      uFG5BcuzcbNyBxWrjon0KCaGx9taLt4LVCoV1Gv1e3LujUKUyifjyKED2JWx4TcW4FdvgztN
      QDXAjDSgGuhlGHAeIGgsIGgWoaRHoWUmoCZyYHq8JR2YAh548Kp34Nfu9lSvAs9BKrHyhB7f
      c7GLT3fNRN3UKlA/YIzh8ImjOHziKCzLws0b07g7fQcfvP4e9qS3wVhKuY5lE6JAXp42v5Eg
      F+ni4iIKhcKGn/9+QFEUBJ4N7lmA78BbWvlZPAu/Pg81PRpdfso5/NINKPEc1MyI2KymR+EW
      r0LLjIMZKfj1BaiZcTCmtNSr2l202qssqUaMATwAFA13FzRkL53B5P7jXRmhsTiLvN49Ur3l
      GUBGPB7HgUMHceDQQezcsxNnv/PucouNmNLWE3QleJ6Hb//krzGSGcFLz35mVYbvZiV+wsGd
      o7gy/SGQmQI3SwhcE/AdBHYd4B4Q+GBGCkpiaUYEAL+xACU1EhkQ0/K74JVuQNHjYJINoMSz
      QLx7XCXgAW5du4rCtl2Ip4Yi98mMbMPFK8PYg2jJ+0gxgIxd+/fA+byDN//uVRiKjp2j+1ck
      YM45Ll25hLM3P8T1xSuYTEzh2SeeF5mR1KZRPk+4y/TCwgJGR6PTAjYLTj7xOG7evInztxfB
      ksNgsVYTMVWiba90HSyeBWMKeOADjEGJZcADH9wqAyCjF0DgQknkweJD4M1i3/ehcwujU7tg
      1sqCATpmTfgebjSTcL1qZL7RlrYBVsLUvp3QDA1xNYab56+tmN/+i/dexZ998L/izdKrcF0P
      n3/6V9BsNsUoUOpLU6lU0Gg04HkearUaFhcXYVkW/uX//C8iC/Y3G7Zv344/+eM/wm9/6Tmo
      emyJuQME/nKxipIoIKjcgleZgVe61iJ8zlt6vRYHi+ehxLPgThWcMSiJXOs8PRokt4FzbJ8Y
      wsSufXDMRuT+nHPMXvsY+X1P4oNiq3HyL2ccXCy2XLJBEGyOXKB7BU3ToGYMeHoAzDu4OX8L
      +44cAAAxL5jUItd18ffvfBs1pQIOYJ9+CEf2HhVTbwCIOQOe58FxHDSbTTGI2zRNnHjy8S3T
      dY4xhl07tmNHTsH75y4jsGuAZ4IzteXNAQcHoGUmoCQLYDxAYJYBr7XIMCPZMnrtemt/PYnA
      LEFJZMGUzsEmYahuBfsO7Uf57jRSudGOVAjXMjE/fRFjuw/DSCQxU7SQc2/jB7FDuOYkcH22
      jqsl79FVgYDWyz164hiOnjiGn3z3h7AdB6VSSejz8XgctVoNt+/cwutXX8Mt3Fg6DjhfPYMX
      K59GIt5K1KIahqhRPbQyOY6DRqOBcrmMqakpbAUcO3IIEz97D7ft1tBCb+ECkNkGpscRmBWo
      yVaxPItloMYyS56geXE8M5JgigbuNsGdBliy3T4Kp1BwzoHAxY6pUWQKYy31KrT/zPn3kC6M
      YmzPYShLzKTGk/jeTR36oQR4Mom7+ZYhvqXjAKsB5xylUknMHU6n0zAMA5VKBf/f9/4fXPMv
      gUnaS+Bx/PrU72Dfnn0AWmnCnHNUq1Vks1mYpinarCiKAs/zUK/XMVOZxut3X8Vvn/x9PHv8
      uQf0tBuLn7/+Dr712nVwprQkge+0AlqxTMuQlRA4TTDuCbshaBQBxsAVDdyuQx2KruuWFxLD
      K+NTX/i8YIxbH5+GkUyBBxxB4KEwuQtGolPVNOsVzNz+COrYsrHySEsAGTTIg8Y2iTweQ8ei
      ugAWSh1SNIYfXfseTt0aQUJN4HMnviDmnqVSKeFKpdnDiUQCtUYNF2bPg6U4/ub1b2E0N4a9
      U52pFJsNLz73FAq5IXzrB2+iqA4DntWKDhsttUQmXu7UoKRaXcC5lB/EFK2V+dklZ4gHHobU
      JhyPY+feHeL7uLaJZK6A3PiOFVXLRDqLnVPHMX3zDNTxltE8kAB94K9//k28ufiLnvvk7REk
      tCSSSOOrn/zVyH1e//CXeNtsnYd7HBrX8Yns88hnC7B9C8OpETz9+DOb1kYwTRPf+ek7+MXH
      JQSujcAqQ81MthG0X5uFkh5dcnVyqG4VRybiOH5wJ4ZzramSr35wDe9PmwCYMLC354CDTz4N
      33OhassL1N2rH2F8z5FVvbNGeQHTc+cRG8sPJMBK8H0f5XK5be4AgQxkzjlKsQWUADyf/HTX
      c33i8NN49+/fgjdiQ4kzWGUbr5s/h9psneOAchS7JncjnU5vSm9RIpHAb73yEoZz7+Pv37gM
      W9GBwMVwkmMin8JILoVSiePyrQVkMll87qm9ePqJYx3Zsrt27cTVf/VNVPgQOA8As4Spp54G
      Ywya3l4PoiiddQn10gKsWhnDO/a12uK7DlyriWZlEa5tQtF0JGwdTqM5YICVYJomXMdDgAB+
      4Ith2vLfNHRD07Ql30cLs3OzKFaKGMmN4MbcdVwqfgxv2IZf52AxAC6gji4bzdlYTjDcL999
      DZ9+7jObsjnX5z75JE4c2oV3T5/Fnp3bcWDfnjbngOd5Ha0QZei6jt975TlcuHwdCYNhOD+F
      MzduIpZMQdPb30e6MIZmpYhUrmXUOpYJu1FFYWoPijNXEPg+eBAgmc1jOKRuzt++MmCAlZBM
      JhFPxqFYChR1KUK51BuTPqo8VvXjhXN4lreGOIyOjOI7Z/4G1ekykORgMQYFDH5tKdqpAH4j
      gJpqne9q6TJe4C/h6swV/OPt72D/7QPYu2dz2ggjwwV86eWXIn/rx+1+9OBeHD3YevYgCHDo
      QB3ff/86kBtv2y85lMf89GU0qyUEvg/PdZDKFqAoKkZ27O95jdFtD2hAxmaB53n48+/9G5yr
      nwZTlpPE5KZZ8mwxzjk81xediRVFwZGR4+DgYEulfTzgYNpSK/eCAr8RwF3w4cz6SDgpnL14
      Bm9cfw0sBpy5fvrBPPhDBkVRkMlkUC/exeLt67hz+SzuXjmHxds3UJm7jeGpvagVZzG+5zCM
      WAJDoyu3TySVdsAAPXDtxjV8tHAGMHpnhwYmh3PHgzsbYNFewMcXPwYAzC/M42rpcpv7FKyV
      FenO+3BnW6oTFMAYV3Ercw0/Ln0PC/pdMMbw2szP8e7pd+7hEz78qNdbOTxBEOCV5x/DsTzH
      2O5DSA7lYdbK0IwYFm9dQ2Hb7qVugX7bgDzP88QfGqlL233ffzRUIM45avUa0ql0353eXnv3
      F/juxW8j4AG8WQ41w6AkohPeuMfh1zjiB1p67S+LP8XpH76LilECT/htQz8YY9CHNQQeh6KF
      JqOECsADN0BxfnENT7w10Gyawhlw4eJFvH1lDgEU5KY0ZEYmEEtlUVucxciOVixGdquSS5ok
      s5yTJTdDeCQY4I233oBlWXj+2ecRj8dXziH3fZy6+Rb8hAstoYA7HIEFODd9KHEGbVRp9wZ5
      gLFz2ahzkzbKiB7QQAgTfwc4wO7q+PHCP6KKMj775MvIZrNbrr64F2q1KhKJVjH7XLmB5OhO
      6HGqz2ZoVotIZZcjx65twYjF2xwTBBq9K4/SYuw+TIp/GLBv7z6cu3AWd+7eQaFQQC7bu/Tx
      /JXzuOPfApYWCmYwqAYQuAxKTIE750MfWyZ4Ld/apm5g90SmMLC9HhAD3r31Fj68/R4CFmBv
      7gCe2fs8Duw/sOXbNdJEIcuyMFP1kJpo70KRn9iJuRsXkcjk4HsuSnduYGzXQQAQjZTleWNy
      M2Xy2j0SDDA+No6x0bG+gyV3F++0Xp4CUeAUWAGYyqCmGZiuwp33oaYVcI9DzazPlAqP/QSW
      cmCWPH5+zIUd8wAGfOydxflTZ/DpuS/gxZMvbZnkul6Ix+M4ODGEmSXCbVZLKM5cxdDoJFSt
      JRFLd25gbPch8S5oaDrQmU8kYxAJjkC9Ucf/9uf/CgsTtxD4AfxSy4WpZZcJPWgurSQKg7sQ
      QIkD+ujKzaLCxB5F/CuBcw7/EoM2rqCQHMaO3C6k4mnoqoaXTnwWmUz3NoKbFUEQ4Edvn0E9
      Nobpc+9gYv9xOGYDyUweqq63DOHte9r2l+M0sqsaaL3DR0YCrBbXbl/FAmYBBfDuBjAmtY5S
      VyXJADDwgMOvBFAL/XVKi1rpVw8GdT8AJcAi5rHYmAeWymff+O5r+O2nfh8nDnR2SiAVYDOO
      gFUUBV949gT+5h9fRSKTRyyRQmwp4c2sV6BonbaR7J6Wh/rJEmEgAULwfR//4zf/BxTLRYBz
      qGkVajra8+OVltq4qy074GFRRVRfw1f2/TpO7H8cyUTyntQ3Pyi4rou/++nbuHP1KtjIJOxG
      FSM79iEzPNH3OQYMsAL+/Pv/Bh9ZH4B7y0GrMJxZH/rYw0P0YfAAYCbDsD6Kf/7r/13k2NHN
      igsffoh/+PA6suNTYEwBUxgUzWjzCPWLrbM0bCCe3PsUrp+5gqYWXUgduBxg3auVHgYwBUCK
      o+jN4cat6ziw5+CDvqUNw+5Dh3Dg3/0Vtr/3KvhS9tVswFH53X8GI766CTGDSHAEHj/0BP7o
      hf8aihOtK3vFAProJnl1GnBrYeZB38WGIhaLYccLn0KeMQwrKkYUFYdVFc3piwBaCXHOX/wL
      VL//F6ie6x1J3yRf8f5j28R2vDD1WUQ1emI6AzbL3DwOpONbzys09fzzqEjGvMoYjp36Odg/
      /CUS3/8LPOW5+NzCHYxcPtfzPAMG6IHPPvEyDKvTPtKHFThzfptn4WFFwk3hyL7oqTmbGU7T
      hBaaOzDpuXhq/jaerJcRW1JPued0PccgGW4FpFIpPDH5FKKkgJZR4d4N4M758IrL4oAHHM6c
      D2fOg19fu5iIYqoVW4WEoPgqfvPJ30UqufmKa1ZCMpOGo65swk5aDTQr3fOpBgywAj7/5Beh
      2XqHwaumGYxJFdqIgqDB4dz2WxmeCwH0EQVaTgHWMdOZshZ93xeZi9S2sR+onobfOPK7eOzg
      ibXfxEOMzNAQ2LPPrLggFHwf81fOYeH6BVTmbiGQ2+FzPvACrYRcNodnt30Svyz+DIwxOI7T
      VhOgKAqMnSq8hQBqXllOctMA3w6w1pATBXBoUPeqZg5w4JmxT+LpY8+s8eqbA0pi5VwoFcAX
      z74FA8BrHOCpDBaf/xV45QXk9z82YIB+8CtPfxkX/uE8ipgTREgDuyncrg0r8IoBlKV0CKYw
      KBkG564HxVCgFVYnbOW07dUM6+Y2UMAovvj0l1d1vc2GaqUC59T7fS0KnV5WKAAAC0JJREFU
      SQA25zjEA2w363B//B/AAZy7+MFABeoHiUQCn9n7efCgVa+qaRp0XYeiKGIOWGABSiKkJiUV
      GBMa1CyDc3fJLmjeW/dRmg/hv3rlnyG5BfV+GZf/4i8xUly5j+jNwMe072OeBygsFdDrjMFg
      DE/WKwMJ0C8K2WEwjwFGZ2Yh5xzc5WBdgq1MZTAmWi/fnfOh9jdbbk3IxXPIDm3tSZW1ahW4
      cqWv1Z8D2KmqXecDDCRAn9i/ez9+9dBvRBq2jDFwB1DiK3+QwLm3LlO1D8/IZsfs9DSG+53Q
      twIGDLAKfOrxF/GHT/4JJvgUuN9OyIwxMN7HTNs4g1cK4JWC1Q5D7AsVs/xQxyU2AvVT7/VN
      uK32W92x9ZeLDcbhfYdxaO8hnP7offzgo+9iUVtq9Kpw8ICtOOJKG1bAfcBb9KHeg/VnZ373
      Q52jtBEo1apwPQ86YxheIbV7UlFx1fNwIFRKyjnHTf8R7w69VjDG8OSxk3js0An879/5l7jp
      X0PSzsBW61hpeC5jDEwD9BEV7qwvbIOo/YBVRpk5MJoZ63//TQpDUZFSVXhBgI8dBxDtyFjb
      288oCjgAkwd4w7YQVxT4uo5xz4PHgVFVHTDAeqBpGv7Lr/xTvPH+61C3afj2rb9Cv45/pjCw
      HvuGJ8v0A92K4cUT3VszbhWMnHgMsavXoKoq8j0kwEVVgfK5z2JieBhOsYjCzp2wazUEf/VN
      JMCRZMqAAdYLXdfxzIlnUalUMHJjHEV1NnI/znkrZSJYbo7V7+LerzTQmbEpWymuFodeeAGn
      zp7D2OUrPffTYzEcfHypMm5pHgPP5XB5/z4MX7kKYGAEbwioANv3/K76t7cYQMsp0MdUGBNa
      K1ViheHpUbPGuoEHwMuHvrilqr96YeLLX4K5BlOHMYadr3wZFw4egDVIhtsYUJrCobGjXQk1
      XF3GVLahLohd+l48d+L5jTvhQ47tu3ahOhk9TKMXaPLPka+8gru57IABNgKUs3Ns53Fwq9Uq
      MVZNIqgCaDLo5XhH1zcODriAb/oInM7o8Ko8OQHw2OTj0CMKw7cytn3962h2+a3IGGrpdMd2
      yqhVVRX5r7wysAE2ApShOTIygkQtjZeOfBbH9h9HrVbDpRsX8fiRJ/Ddt/4OV/CxOIYxBn1C
      QdDkrXbpWQ5mLDfdJXSVKBYAmwEceHbqk3jhZHQn5q2MbXv34PTBA0hdutzxnhrbJvHU7/5O
      z+MD1x0wwEZA7gb9J1/7b+D7PhRFQTqdxpPHTgIAfuXkl/GP7wOXg/Mt9QcA0xjUIQbF4/Ar
      HFqeid+ALjUBLpD1Cvji4VewY9tOZLNZGIaxKVudbAQ8p3vBSy/MnDkD7Uc/GTDARqLRaMB1
      XWQymbY+lECrjvWrz/4ark2fwPu33sU0riwTuwpAAdy5AMak2qUYBphg2/D1Z34Thdww8rn8
      fXyyhxdaPg/cmF7VMbVKBcEvX8ew7w9sgI2E67rI5XKC8MMt+Rhj2LtrL77x/G/hq9t+E3l7
      VGzX8gqgdq/42qXvxT995Z9j3+79A+KXkHzseOQ7a9y5g+JsyyXtOA6mr7bcno16HXf/9Z9h
      st7qJDaQAPcA9EHC7fgIjDEc3HMQH905gxKWUikC4MnMMzhjneqcSGmr+I9e/P1Hwse/Wiix
      GDgDWOg1J1wX5XfeReErr+DGO+9i4vU3cDmXBVcU7MayrTWQABsAMoKpZDHc+zP8R1EULCwu
      4IrVauPBOUfCSuPZk8+1jNsQVFcbrPpdsHvfPsx1sX/qZhMXfvozFN54A3HGsKtSxZ5ypa26
      biAB1gnP8xAEASzLgq7rkXW7MvHTb6Zt4rnRF7HYLCJuxLF3Yh++c/rbUCJS+b3AQ7lcxsjI
      yP14pE0FTdOgHTsK9uFZAO2Og6M3bgI3bqJXftaAAdYJy7Lg+z7q9TpyuVyH8Rv259Nvu7bv
      wu6p1lifi9cu4DvX/kZMkwmrTZl4BoXC6tv+PSrY9/Wv48yNaZTn5nAi1hqo0QyCyLws2S4b
      tEXZADiOA9u2EY/Hu/YJChe0y/9fWFzAP1z9e/CEH3ls3E/gD178L1ZVF/yoIZPJYM8f/AGG
      NR2XXQcXPRcHewQFOeewOMelQRxg/WCMwbZtpNPpvrI2ZUZoNBr421Pfgpfu4svmwGd2fgE7
      t+3cqNvdspjYMYWbO3dg38wtsc3zvLaJnjQxRlEU3Ax87Nf1gQRYLxzHge/7Xb09jDEkEgmk
      I8LytVoNv/rkbyBtZcF9dBjPWT+PTz3+4j29/60CxhgyT3+irfpLVZdjKjQkgyTplKrhrOMM
      GGC9UBSl59RzkhCmaYoB20CL2JPJJMZGx/BPnv1DPJV6Dqq7LLZ138CvP/XbA9fnKnDg2Wcx
      G7KV6NtQxi4xQZwxnIjFBgywXiiKAn+p21ixWITneTBNE7Ztw7ZtVKtVFItF1Ot11Go1WJYF
      123lQdPqlEql8NmTL+Pr+38LMBXonoH/9Ok/wtG9xx7Yc21GaJqGxLPLzcBoTBJ56mhOsOct
      dzYY2ADrgBzwCoIApmnC933ouo5KpYJ4PA5d1+F5nphJtbCwgHg8jpGRkY78nT1Te3Fk+jiS
      Q0ns33ngQTzSpgbnHPXr10CeZDnuIkfnSQ2aGx8bMMB60JpMHggpsGPHDnDOYds2UqkUEolE
      21xaAMhms63B3bUahoaGOga3DSWy+PJzX3lQj7SpwRjD8IkT4OcvgGG5o17AWzXDiqLAY8Bs
      Oo340SM49qu/OhiRtB5YloVqtYp6vS6IXUYv24C6y9m2LUSyoigoFAoDl+c6cPvmTVz6++9g
      6uo1LI6NQs3nMfTSi+C+D6dahZHNYt+hQ+IdDxhgjeCco1KpwHEcLC4uIpfrHL4tex2ikEwm
      kUgkhA2x0v4D9IcgCHDrxg3s2LNnxX0Hb3uNCIIAjuP0HDu6Uj//ZrO5PK9W0wbEv0FQFKUv
      4gcGDLBm2LYtpEA8Ht2mu5/AWLPZrahvgPuBAQOsAb7vo9FoCCNY13uH3Xsxwlbv4vawY+AF
      WiNoYstKBNwtQgy0jORk8h62ih5gRQwYYA0gvzJjTPj4uzFCOCtUURQYhgHDMKDrnaOXBri/
      GDDAGkHBL8Mw+pIC8Xgc6XR6QPAPGQY2wBrgui48z0O1WkUq1f8klgHxP3wYMMAaEE6z7QY5
      EPaoti152DFQgdYAKmtcaUVPp9PQdV34+gd4+DCQAGsA5xzpdLotqzAKVIBBg/QGePgwYIBV
      gnMu0pnl/P4oUB3AAA8vBgywBui6LvLKewW5NE1DKpUarP4PMQYMsAbEYjFwzmEYRkcLFBkD
      t+fDjwEDrBKe56HZbAr9f3FxMXK/XqnQAzw8GLgmVgkKgFEQLArpdBrxeHzAAJsAAwZYBTjn
      ogM05xyO43QEwuLx+EDv30QYqECrgOd5Ig2aak0HOfybG4OvtwooioJcLif8+uQOlWFZFur1
      euRvAzx8GKhAq4CiKKIXaK9EuEaj1Xu+V53AAA8HBhJgFbBtG7VaDUDvAdaapg3y/DcJBgyw
      Csh9gGq1Wke7Q8YYDMNAoVAYJL9tEgwYYA2wbRuxWKxD/aG8/4FhvHkw+FKrgK7rUFUVnud1
      9OxkjEHX9a6xgQEeTgwYYBWg9AfDMFAsFsV4VKAV+c3n84O0502GAQOsApqmCe/PyMgIHMdp
      K4zpJ/hFnST6aZkywL3HgAFWAcaYUH3CAxd6JcURqG9orVZDsViEZUVMxBvgvmIgr9cAIv5E
      IoFarSYqvlRVXXGWl6qqIl1ioC49eAy+wCpBSW61Wg2ZTEYQfxAEK1aIkaE8wMODgQq0Ssg5
      QHLPH9d1YZrmQLffZPj/AT8TLQcITumZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Malnutrition by Wealth' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Malnutrition by Wealth Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Multi Meas Dash' width='192'>
      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
      mAzX6AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Multi Meas Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Multi Measure' width='192'>
      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
      KpCV638BgGTXFfj6pn4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
